// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R5A
// The generation of user and time information were disabled by the -D flag.

// Copyright (c) 2000-2018 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef General__Types_HH
#define General__Types_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include <TTCN3.hh>

#if TTCN3_VERSION != 60500
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.\
 Run make clean and rebuild the project if the version of the compiler changed recently.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

#undef General__Types_HH
#endif

namespace General__Types {

/* Forward declarations of classes */

typedef PreGenRecordOf::PREGEN__RECORD__OF__INTEGER Integers;
typedef PreGenRecordOf::PREGEN__RECORD__OF__INTEGER_template Integers_template;
class Integer__array;
class Integer__array_template;
class Protocols;
class Protocols_template;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING OCT1List;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING_template OCT1List_template;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING OCT2List;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING_template OCT2List_template;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING OCT3List;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING_template OCT3List_template;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING OCT4List;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING_template OCT4List_template;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING OCT5List;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING_template OCT5List_template;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING OCT6List;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING_template OCT6List_template;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING OCT7List;
typedef PreGenRecordOf::PREGEN__RECORD__OF__OCTETSTRING_template OCT7List_template;
class ListOfDummy__comptype;
class ListOfDummy__comptype_template;
class ListOfDummy__CT;
class ListOfDummy__CT_template;
class ProtocolList;
class ProtocolList_template;

} /* end of namespace */

#ifndef General__Types_HH
#define General__Types_HH

namespace General__Types {

/* Type definitions */

typedef BITSTRING BIT1n;
typedef BITSTRING_template BIT1n_template;
typedef BITSTRING BIT2n;
typedef BITSTRING_template BIT2n_template;
typedef BITSTRING BIT3n;
typedef BITSTRING_template BIT3n_template;
typedef BITSTRING BIT4n;
typedef BITSTRING_template BIT4n_template;
typedef BITSTRING BIT5n;
typedef BITSTRING_template BIT5n_template;
typedef BITSTRING BIT6n;
typedef BITSTRING_template BIT6n_template;
typedef BITSTRING BIT7n;
typedef BITSTRING_template BIT7n_template;
typedef BITSTRING BIT8n;
typedef BITSTRING_template BIT8n_template;
typedef BITSTRING BIT9n;
typedef BITSTRING_template BIT9n_template;
typedef BITSTRING BIT12n;
typedef BITSTRING_template BIT12n_template;
typedef BITSTRING BIT14n;
typedef BITSTRING_template BIT14n_template;
typedef BITSTRING BIT15n;
typedef BITSTRING_template BIT15n_template;
typedef BITSTRING BIT16n;
typedef BITSTRING_template BIT16n_template;
typedef BITSTRING BIT56n;
typedef BITSTRING_template BIT56n_template;
typedef BITSTRING BIT14__24n;
typedef BITSTRING_template BIT14__24n_template;
typedef BITSTRING BIT1np;
typedef BITSTRING_template BIT1np_template;
typedef BITSTRING BIT2np;
typedef BITSTRING_template BIT2np_template;
typedef BITSTRING BIT3np;
typedef BITSTRING_template BIT3np_template;
typedef BITSTRING BIT4np;
typedef BITSTRING_template BIT4np_template;
typedef BITSTRING BIT5np;
typedef BITSTRING_template BIT5np_template;
typedef BITSTRING BIT6np;
typedef BITSTRING_template BIT6np_template;
typedef BITSTRING BIT7np;
typedef BITSTRING_template BIT7np_template;
typedef BITSTRING BIT15np;
typedef BITSTRING_template BIT15np_template;
typedef BITSTRING BIT1;
typedef BITSTRING_template BIT1_template;
typedef BITSTRING BIT2;
typedef BITSTRING_template BIT2_template;
typedef BITSTRING BIT3;
typedef BITSTRING_template BIT3_template;
typedef BITSTRING BIT4;
typedef BITSTRING_template BIT4_template;
typedef BITSTRING BIT5;
typedef BITSTRING_template BIT5_template;
typedef BITSTRING BIT6;
typedef BITSTRING_template BIT6_template;
typedef BITSTRING BIT7;
typedef BITSTRING_template BIT7_template;
typedef BITSTRING BIT8;
typedef BITSTRING_template BIT8_template;
typedef BITSTRING BIT9;
typedef BITSTRING_template BIT9_template;
typedef BITSTRING BIT10;
typedef BITSTRING_template BIT10_template;
typedef BITSTRING BIT11;
typedef BITSTRING_template BIT11_template;
typedef BITSTRING BIT12;
typedef BITSTRING_template BIT12_template;
typedef BITSTRING BIT13;
typedef BITSTRING_template BIT13_template;
typedef BITSTRING BIT14;
typedef BITSTRING_template BIT14_template;
typedef BITSTRING BIT15;
typedef BITSTRING_template BIT15_template;
typedef BITSTRING BIT16;
typedef BITSTRING_template BIT16_template;
typedef BITSTRING BIT24;
typedef BITSTRING_template BIT24_template;
typedef BITSTRING BIT28;
typedef BITSTRING_template BIT28_template;
typedef BITSTRING BIT29;
typedef BITSTRING_template BIT29_template;
typedef BITSTRING BIT30;
typedef BITSTRING_template BIT30_template;
typedef BITSTRING BIT31;
typedef BITSTRING_template BIT31_template;
typedef BITSTRING BIT32;
typedef BITSTRING_template BIT32_template;
typedef BITSTRING BIT56;
typedef BITSTRING_template BIT56_template;
typedef OCTETSTRING OCT0n;
typedef OCTETSTRING_template OCT0n_template;
typedef OCTETSTRING OCT1n;
typedef OCTETSTRING_template OCT1n_template;
typedef OCTETSTRING OCT2n;
typedef OCTETSTRING_template OCT2n_template;
typedef OCTETSTRING OCT3n;
typedef OCTETSTRING_template OCT3n_template;
typedef OCTETSTRING OCT4n;
typedef OCTETSTRING_template OCT4n_template;
typedef OCTETSTRING OCT5n;
typedef OCTETSTRING_template OCT5n_template;
typedef OCTETSTRING OCT6n;
typedef OCTETSTRING_template OCT6n_template;
typedef OCTETSTRING OCT7n;
typedef OCTETSTRING_template OCT7n_template;
typedef OCTETSTRING OCT8n;
typedef OCTETSTRING_template OCT8n_template;
typedef OCTETSTRING OCT9n;
typedef OCTETSTRING_template OCT9n_template;
typedef OCTETSTRING OCT10n;
typedef OCTETSTRING_template OCT10n_template;
typedef OCTETSTRING OCT11n;
typedef OCTETSTRING_template OCT11n_template;
typedef OCTETSTRING OCT12n;
typedef OCTETSTRING_template OCT12n_template;
typedef OCTETSTRING OCT13n;
typedef OCTETSTRING_template OCT13n_template;
typedef OCTETSTRING OCT14n;
typedef OCTETSTRING_template OCT14n_template;
typedef OCTETSTRING OCT15n;
typedef OCTETSTRING_template OCT15n_template;
typedef OCTETSTRING OCT16n;
typedef OCTETSTRING_template OCT16n_template;
typedef OCTETSTRING OCT17n;
typedef OCTETSTRING_template OCT17n_template;
typedef OCTETSTRING OCT18n;
typedef OCTETSTRING_template OCT18n_template;
typedef OCTETSTRING OCT19n;
typedef OCTETSTRING_template OCT19n_template;
typedef OCTETSTRING OCT20n;
typedef OCTETSTRING_template OCT20n_template;
typedef OCTETSTRING OCT28n;
typedef OCTETSTRING_template OCT28n_template;
typedef OCTETSTRING OCT32n;
typedef OCTETSTRING_template OCT32n_template;
typedef OCTETSTRING OCT34n;
typedef OCTETSTRING_template OCT34n_template;
typedef OCTETSTRING OCT46n;
typedef OCTETSTRING_template OCT46n_template;
typedef OCTETSTRING OCT50n;
typedef OCTETSTRING_template OCT50n_template;
typedef OCTETSTRING OCT69n;
typedef OCTETSTRING_template OCT69n_template;
typedef OCTETSTRING OCT100n;
typedef OCTETSTRING_template OCT100n_template;
typedef OCTETSTRING OCT128n;
typedef OCTETSTRING_template OCT128n_template;
typedef OCTETSTRING OCT500n;
typedef OCTETSTRING_template OCT500n_template;
typedef OCTETSTRING OCTNn;
typedef OCTETSTRING_template OCTNn_template;
typedef OCTETSTRING OCT1__3n;
typedef OCTETSTRING_template OCT1__3n_template;
typedef OCTETSTRING OCT1__4n;
typedef OCTETSTRING_template OCT1__4n_template;
typedef OCTETSTRING OCT1__5n;
typedef OCTETSTRING_template OCT1__5n_template;
typedef OCTETSTRING OCT1__6n;
typedef OCTETSTRING_template OCT1__6n_template;
typedef OCTETSTRING OCT1__7n;
typedef OCTETSTRING_template OCT1__7n_template;
typedef OCTETSTRING OCT1__8n;
typedef OCTETSTRING_template OCT1__8n_template;
typedef OCTETSTRING OCT1__12n;
typedef OCTETSTRING_template OCT1__12n_template;
typedef OCTETSTRING OCT1__15n;
typedef OCTETSTRING_template OCT1__15n_template;
typedef OCTETSTRING OCT1__16n;
typedef OCTETSTRING_template OCT1__16n_template;
typedef OCTETSTRING OCT1__18n;
typedef OCTETSTRING_template OCT1__18n_template;
typedef OCTETSTRING OCT1__20n;
typedef OCTETSTRING_template OCT1__20n_template;
typedef OCTETSTRING OCT1__24n;
typedef OCTETSTRING_template OCT1__24n_template;
typedef OCTETSTRING OCT1__32n;
typedef OCTETSTRING_template OCT1__32n_template;
typedef OCTETSTRING OCT1__34n;
typedef OCTETSTRING_template OCT1__34n_template;
typedef OCTETSTRING OCT1__46n;
typedef OCTETSTRING_template OCT1__46n_template;
typedef OCTETSTRING OCT1__50n;
typedef OCTETSTRING_template OCT1__50n_template;
typedef OCTETSTRING OCT1__112n;
typedef OCTETSTRING_template OCT1__112n_template;
typedef OCTETSTRING OCT1__127n;
typedef OCTETSTRING_template OCT1__127n_template;
typedef OCTETSTRING OCT1__128n;
typedef OCTETSTRING_template OCT1__128n_template;
typedef OCTETSTRING OCT1__172n;
typedef OCTETSTRING_template OCT1__172n_template;
typedef OCTETSTRING OCT3__5n;
typedef OCTETSTRING_template OCT3__5n_template;
typedef OCTETSTRING OCT3__7n;
typedef OCTETSTRING_template OCT3__7n_template;
typedef OCTETSTRING OCT3__8n;
typedef OCTETSTRING_template OCT3__8n_template;
typedef OCTETSTRING OCT3__14n;
typedef OCTETSTRING_template OCT3__14n_template;
typedef OCTETSTRING OCT3__17n;
typedef OCTETSTRING_template OCT3__17n_template;
typedef OCTETSTRING OCT4__8n;
typedef OCTETSTRING_template OCT4__8n_template;
typedef CHARSTRING CHAR4;
typedef CHARSTRING_template CHAR4_template;
typedef HEXSTRING HEX4n;
typedef HEXSTRING_template HEX4n_template;
typedef HEXSTRING HEX6n;
typedef HEXSTRING_template HEX6n_template;
typedef HEXSTRING HEX8n;
typedef HEXSTRING_template HEX8n_template;
typedef HEXSTRING HEX15n;
typedef HEXSTRING_template HEX15n_template;
typedef HEXSTRING HEX16n;
typedef HEXSTRING_template HEX16n_template;
typedef HEXSTRING HEX24n;
typedef HEXSTRING_template HEX24n_template;
typedef HEXSTRING HEX0__3n;
typedef HEXSTRING_template HEX0__3n_template;
typedef HEXSTRING HEX0__18n;
typedef HEXSTRING_template HEX0__18n_template;
typedef HEXSTRING HEX1__20n;
typedef HEXSTRING_template HEX1__20n_template;
typedef HEXSTRING HEX1__34n;
typedef HEXSTRING_template HEX1__34n_template;
typedef INTEGER INT3nb;
typedef INTEGER_template INT3nb_template;
typedef INTEGER INT4nb;
typedef INTEGER_template INT4nb_template;
typedef INTEGER INT5nb;
typedef INTEGER_template INT5nb_template;
typedef INTEGER INT8nb;
typedef INTEGER_template INT8nb_template;
typedef INTEGER INT2nbp;
typedef INTEGER_template INT2nbp_template;
typedef INTEGER INT1nbp;
typedef INTEGER_template INT1nbp_template;
typedef INTEGER INT3nbp;
typedef INTEGER_template INT3nbp_template;
typedef INTEGER INT5nbp;
typedef INTEGER_template INT5nbp_template;
typedef INTEGER INT9nbp;
typedef INTEGER_template INT9nbp_template;
typedef INTEGER INT13nbp;
typedef INTEGER_template INT13nbp_template;
typedef INTEGER INT15nbp;
typedef INTEGER_template INT15nbp_template;
typedef BITSTRING BIT6__BO__LAST;
typedef BITSTRING_template BIT6__BO__LAST_template;
typedef BITSTRING BIT16__BO__LAST;
typedef BITSTRING_template BIT16__BO__LAST_template;
typedef BITSTRING BIT32__BO__LAST;
typedef BITSTRING_template BIT32__BO__LAST_template;
typedef OCTETSTRING Dummy;
typedef OCTETSTRING_template Dummy_template;
typedef OCTETSTRING OCT0;
typedef OCTETSTRING_template OCT0_template;
typedef OCTETSTRING OCT1;
typedef OCTETSTRING_template OCT1_template;
typedef OCTETSTRING OCT2;
typedef OCTETSTRING_template OCT2_template;
typedef OCTETSTRING OCT3;
typedef OCTETSTRING_template OCT3_template;
typedef OCTETSTRING OCT4;
typedef OCTETSTRING_template OCT4_template;
typedef OCTETSTRING OCT5;
typedef OCTETSTRING_template OCT5_template;
typedef OCTETSTRING OCT6;
typedef OCTETSTRING_template OCT6_template;
typedef OCTETSTRING OCT7;
typedef OCTETSTRING_template OCT7_template;
typedef OCTETSTRING OCT8;
typedef OCTETSTRING_template OCT8_template;
typedef OCTETSTRING OCT9;
typedef OCTETSTRING_template OCT9_template;
typedef OCTETSTRING OCT10;
typedef OCTETSTRING_template OCT10_template;
typedef OCTETSTRING OCT11;
typedef OCTETSTRING_template OCT11_template;
typedef OCTETSTRING OCT12;
typedef OCTETSTRING_template OCT12_template;
typedef OCTETSTRING OCT13;
typedef OCTETSTRING_template OCT13_template;
typedef OCTETSTRING OCT14;
typedef OCTETSTRING_template OCT14_template;
typedef OCTETSTRING OCT15;
typedef OCTETSTRING_template OCT15_template;
typedef OCTETSTRING OCT16;
typedef OCTETSTRING_template OCT16_template;
typedef OCTETSTRING OCT17;
typedef OCTETSTRING_template OCT17_template;
typedef OCTETSTRING OCT18;
typedef OCTETSTRING_template OCT18_template;
typedef OCTETSTRING OCT19;
typedef OCTETSTRING_template OCT19_template;
typedef OCTETSTRING OCT20;
typedef OCTETSTRING_template OCT20_template;
typedef OCTETSTRING OCT22;
typedef OCTETSTRING_template OCT22_template;
typedef OCTETSTRING OCT32;
typedef OCTETSTRING_template OCT32_template;
typedef OCTETSTRING OCT34;
typedef OCTETSTRING_template OCT34_template;
typedef OCTETSTRING OCT46;
typedef OCTETSTRING_template OCT46_template;
typedef OCTETSTRING OCT1__260;
typedef OCTETSTRING_template OCT1__260_template;
typedef OCTETSTRING OCT1__8;
typedef OCTETSTRING_template OCT1__8_template;
typedef OCTETSTRING OCT1__12;
typedef OCTETSTRING_template OCT1__12_template;
typedef OCTETSTRING OCT1__32;
typedef OCTETSTRING_template OCT1__32_template;
typedef OCTETSTRING OCT1__50;
typedef OCTETSTRING_template OCT1__50_template;
typedef OCTETSTRING OCT3__8;
typedef OCTETSTRING_template OCT3__8_template;
typedef OCTETSTRING OCTN;
typedef OCTETSTRING_template OCTN_template;
typedef HEXSTRING HEX1;
typedef HEXSTRING_template HEX1_template;
typedef HEXSTRING HEX0__16;
typedef HEXSTRING_template HEX0__16_template;
typedef HEXSTRING HEX5__16;
typedef HEXSTRING_template HEX5__16_template;
typedef HEXSTRING HEX1__32;
typedef HEXSTRING_template HEX1__32_template;
typedef INTEGER INT1;
typedef INTEGER_template INT1_template;
typedef INTEGER LIN1;
typedef INTEGER_template LIN1_template;
typedef INTEGER LIN2;
typedef INTEGER_template LIN2_template;
typedef INTEGER LIN2__BO__LAST;
typedef INTEGER_template LIN2__BO__LAST_template;
typedef INTEGER LIN3__BO__LAST;
typedef INTEGER_template LIN3__BO__LAST_template;
typedef INTEGER LIN4__BO__LAST;
typedef INTEGER_template LIN4__BO__LAST_template;
typedef INTEGER INT1b;
typedef INTEGER_template INT1b_template;
typedef INTEGER INT2b;
typedef INTEGER_template INT2b_template;
typedef INTEGER INT3b;
typedef INTEGER_template INT3b_template;
typedef INTEGER INT4b;
typedef INTEGER_template INT4b_template;
typedef INTEGER INT5b;
typedef INTEGER_template INT5b_template;
typedef INTEGER INT6b;
typedef INTEGER_template INT6b_template;
typedef INTEGER INT7b;
typedef INTEGER_template INT7b_template;
typedef INTEGER INT11b__BO__LAST;
typedef INTEGER_template INT11b__BO__LAST_template;
typedef INTEGER INT12b__BO__LAST;
typedef INTEGER_template INT12b__BO__LAST_template;
typedef INTEGER INT13b__BO__LAST;
typedef INTEGER_template INT13b__BO__LAST_template;
typedef INTEGER INT14b__BO__LAST;
typedef INTEGER_template INT14b__BO__LAST_template;
typedef INTEGER INT18b__BO__LAST;
typedef INTEGER_template INT18b__BO__LAST_template;
typedef INTEGER INT20b__BO__LAST;
typedef INTEGER_template INT20b__BO__LAST_template;
typedef INTEGER INT31b__BO__LAST;
typedef INTEGER_template INT31b__BO__LAST_template;
typedef COMPONENT Dummy__comptype;
typedef COMPONENT_template Dummy__comptype_template;
typedef COMPONENT Dummy__CT;
typedef COMPONENT_template Dummy__CT_template;

/* Class definitions */

class Integer__array : public Base_Type {
struct recordof_setof_struct {
int ref_count;
int n_elements;
Integers **value_elements;
} *val_ptr;

static const Integers UNBOUND_ELEM;
private:
friend boolean operator==(null_type null_value, const Integer__array& other_value);

public:
  typedef Integers of_type;
Integer__array();
Integer__array(null_type other_value);
Integer__array(const Integer__array& other_value);
~Integer__array();

void clean_up();
Integer__array& operator=(null_type other_value);
Integer__array& operator=(const Integer__array& other_value);

boolean operator==(null_type other_value) const;
boolean operator==(const Integer__array& other_value) const;
inline boolean operator!=(null_type other_value) const { return !(*this == other_value); }
inline boolean operator!=(const Integer__array& other_value) const { return !(*this == other_value); }

Integers& operator[](int index_value);
Integers& operator[](const INTEGER& index_value);
const Integers& operator[](int index_value) const;
const Integers& operator[](const INTEGER& index_value) const;

Integer__array operator<<=(int rotate_count) const;
Integer__array operator<<=(const INTEGER& rotate_count) const;
Integer__array operator>>=(int rotate_count) const;
Integer__array operator>>=(const INTEGER& rotate_count) const;

Integer__array operator+(const Integer__array& other_value) const;

Integer__array substr(int index, int returncount) const;

Integer__array replace(int index, int len, const Integer__array& repl) const;

Integer__array replace(int index, int len, const Integer__array_template& repl) const;

void set_size(int new_size);
inline boolean is_bound() const {return val_ptr != NULL; }
inline boolean is_present() const { return is_bound(); }
boolean is_value() const;
int size_of() const;
int n_elem() const { return size_of(); }
int lengthof() const;
void log() const;
void set_param(Module_Param& param);
  void set_implicit_omit();
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
void encode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, TTCN_EncDec::coding_t, ...) const;
void decode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, TTCN_EncDec::coding_t, ...);
int RAW_encode(const TTCN_Typedescriptor_t&, RAW_enc_tree&) const;
int RAW_decode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, int, raw_order_t, boolean no_err=FALSE,int sel_field=-1, boolean first_call=TRUE, const RAW_Force_Omit* force_omit = NULL);
};

class Integer__array_template : public Record_Of_Template {
union {
struct {
int n_elements;
Integers_template **value_elements;
} single_value;
struct {
unsigned int n_values;
Integer__array_template *list_value;
} value_list;
};
void copy_value(const Integer__array& other_value);
void copy_template(const Integer__array_template& other_value);
static boolean match_function_specific(const Base_Type *value_ptr, int value_index, const Restricted_Length_Template *template_ptr, int template_index, boolean legacy);

public:
Integer__array_template();
Integer__array_template(template_sel other_value);
Integer__array_template(null_type other_value);
Integer__array_template(const Integer__array& other_value);
Integer__array_template(const OPTIONAL<Integer__array>& other_value);
Integer__array_template(const Integer__array_template& other_value);
~Integer__array_template();

void clean_up();
Integer__array_template& operator=(template_sel other_value);
Integer__array_template& operator=(null_type other_value);
Integer__array_template& operator=(const Integer__array& other_value);
Integer__array_template& operator=(const OPTIONAL<Integer__array>& other_value);
Integer__array_template& operator=(const Integer__array_template& other_value);

Integers_template& operator[](int index_value);
Integers_template& operator[](const INTEGER& index_value);
const Integers_template& operator[](int index_value) const;
const Integers_template& operator[](const INTEGER& index_value) const;

void set_size(int new_size);
int n_elem() const;
int size_of(boolean is_size) const;
inline int size_of() const { return size_of(TRUE); }
inline int lengthof() const { return size_of(FALSE); }
boolean match(const Integer__array& other_value, boolean legacy = FALSE) const;
inline boolean is_bound() const 
  {return template_selection != UNINITIALIZED_TEMPLATE; }
boolean is_value() const;
Integer__array valueof() const;
Integer__array substr(int index, int returncount) const;

Integer__array replace(int index, int len, const Integer__array_template& repl) const;

Integer__array replace(int index, int len, const Integer__array& repl) const;

void set_type(template_sel template_type, unsigned int list_length);
Integer__array_template& list_item(unsigned int list_index);
void log() const;
void log_match(const Integer__array& match_value, boolean legacy = FALSE) const;
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
boolean is_present(boolean legacy = FALSE) const;
boolean match_omit(boolean legacy = FALSE) const;
void set_param(Module_Param& param);
void check_restriction(template_res t_res, const char* t_name=NULL, boolean legacy = FALSE) const;
boolean get_istemplate_kind(const char* type) const;
};

class Protocols : public Base_Type { // enum
friend class Protocols_template;
public:
enum enum_type { mtp3 = 0, sccp = 1, isup = 2, bicc = 3, qaal2 = 4, gcp = 5, bssap = 6, bssmap = 7, ranap = 8, dtap = 9, UNKNOWN_VALUE = 10, UNBOUND_VALUE = 11 };
private:
enum_type enum_value;

public:
Protocols();
Protocols(int other_value);
Protocols(enum_type other_value);
Protocols(const Protocols& other_value);

Protocols& operator=(int other_value);
Protocols& operator=(enum_type other_value);
Protocols& operator=(const Protocols& other_value);

boolean operator==(enum_type other_value) const;
boolean operator==(const Protocols& other_value) const;
inline boolean operator!=(enum_type other_value) const { return !(*this == other_value); }
inline boolean operator!=(const Protocols& other_value) const { return !(*this == other_value); }
boolean operator<(enum_type other_value) const;
boolean operator<(const Protocols& other_value) const;
boolean operator>(enum_type other_value) const;
boolean operator>(const Protocols& other_value) const;
inline boolean operator<=(enum_type other_value) const { return !(*this > other_value); }
inline boolean operator<=(const Protocols& other_value) const { return !(*this > other_value); }
inline boolean operator>=(enum_type other_value) const { return !(*this < other_value); }
inline boolean operator>=(const Protocols& other_value) const { return !(*this < other_value); }

static const char *enum_to_str(enum_type enum_par);
static enum_type str_to_enum(const char *str_par);
static boolean is_valid_enum(int int_par);

static int enum2int(enum_type enum_par);
static int enum2int(const Protocols& enum_par);
int as_int() const { return enum2int(enum_value); }
void from_int(int p_val) { *this = p_val; }
void int2enum(int int_val);
operator enum_type() const;
inline boolean is_bound() const { return enum_value != UNBOUND_VALUE; }
inline boolean is_value() const { return enum_value != UNBOUND_VALUE; }
inline void clean_up(){ enum_value = UNBOUND_VALUE; }
inline boolean is_present() const { return is_bound(); }
void log() const;
void set_param(Module_Param& param);
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
void encode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, TTCN_EncDec::coding_t, ...) const;
void decode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, TTCN_EncDec::coding_t, ...);
int RAW_encode(const TTCN_Typedescriptor_t&, RAW_enc_tree&) const;
int RAW_decode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, int, raw_order_t, boolean no_err=FALSE,int sel_field=-1, boolean first_call=TRUE, const RAW_Force_Omit* force_omit = NULL);
};

class Protocols_template : public Base_Template {
union {
Protocols::enum_type single_value;
struct {
unsigned int n_values;
Protocols_template *list_value;
} value_list;
};

void copy_template(const Protocols_template& other_value);

public:
Protocols_template();
Protocols_template(template_sel other_value);
Protocols_template(int other_value);
Protocols_template(Protocols::enum_type other_value);
Protocols_template(const Protocols& other_value);
Protocols_template(const OPTIONAL<Protocols>& other_value);
Protocols_template(const Protocols_template& other_value);
~Protocols_template();

boolean is_bound() const;
boolean is_value() const;
void clean_up();
Protocols_template& operator=(template_sel other_value);
Protocols_template& operator=(int other_value);
Protocols_template& operator=(Protocols::enum_type other_value);
Protocols_template& operator=(const Protocols& other_value);
Protocols_template& operator=(const OPTIONAL<Protocols>& other_value);
Protocols_template& operator=(const Protocols_template& other_value);

boolean match(Protocols::enum_type other_value, boolean legacy = FALSE) const;
boolean match(const Protocols& other_value, boolean legacy = FALSE) const;
Protocols::enum_type valueof() const;
void set_type(template_sel template_type, unsigned int list_length);
Protocols_template& list_item(unsigned int list_index);
void log() const;
void log_match(const Protocols& match_value, boolean legacy = FALSE) const;
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
boolean is_present(boolean legacy = FALSE) const;
boolean match_omit(boolean legacy = FALSE) const;
void set_param(Module_Param& param);
void check_restriction(template_res t_res, const char* t_name=NULL, boolean legacy = FALSE) const;
};

class ListOfDummy__comptype : public Base_Type {
struct recordof_setof_struct {
int ref_count;
int n_elements;
COMPONENT **value_elements;
} *val_ptr;

static const COMPONENT UNBOUND_ELEM;
private:
friend boolean operator==(null_type null_value, const ListOfDummy__comptype& other_value);

public:
  typedef COMPONENT of_type;
ListOfDummy__comptype();
ListOfDummy__comptype(null_type other_value);
ListOfDummy__comptype(const ListOfDummy__comptype& other_value);
~ListOfDummy__comptype();

void clean_up();
ListOfDummy__comptype& operator=(null_type other_value);
ListOfDummy__comptype& operator=(const ListOfDummy__comptype& other_value);

boolean operator==(null_type other_value) const;
boolean operator==(const ListOfDummy__comptype& other_value) const;
inline boolean operator!=(null_type other_value) const { return !(*this == other_value); }
inline boolean operator!=(const ListOfDummy__comptype& other_value) const { return !(*this == other_value); }

COMPONENT& operator[](int index_value);
COMPONENT& operator[](const INTEGER& index_value);
const COMPONENT& operator[](int index_value) const;
const COMPONENT& operator[](const INTEGER& index_value) const;

ListOfDummy__comptype operator<<=(int rotate_count) const;
ListOfDummy__comptype operator<<=(const INTEGER& rotate_count) const;
ListOfDummy__comptype operator>>=(int rotate_count) const;
ListOfDummy__comptype operator>>=(const INTEGER& rotate_count) const;

ListOfDummy__comptype operator+(const ListOfDummy__comptype& other_value) const;

ListOfDummy__comptype substr(int index, int returncount) const;

ListOfDummy__comptype replace(int index, int len, const ListOfDummy__comptype& repl) const;

ListOfDummy__comptype replace(int index, int len, const ListOfDummy__comptype_template& repl) const;

void set_size(int new_size);
inline boolean is_bound() const {return val_ptr != NULL; }
inline boolean is_present() const { return is_bound(); }
boolean is_value() const;
int size_of() const;
int n_elem() const { return size_of(); }
int lengthof() const;
void log() const;
void set_param(Module_Param& param);
  void set_implicit_omit();
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
};

class ListOfDummy__comptype_template : public Record_Of_Template {
union {
struct {
int n_elements;
COMPONENT_template **value_elements;
} single_value;
struct {
unsigned int n_values;
ListOfDummy__comptype_template *list_value;
} value_list;
};
void copy_value(const ListOfDummy__comptype& other_value);
void copy_template(const ListOfDummy__comptype_template& other_value);
static boolean match_function_specific(const Base_Type *value_ptr, int value_index, const Restricted_Length_Template *template_ptr, int template_index, boolean legacy);

public:
ListOfDummy__comptype_template();
ListOfDummy__comptype_template(template_sel other_value);
ListOfDummy__comptype_template(null_type other_value);
ListOfDummy__comptype_template(const ListOfDummy__comptype& other_value);
ListOfDummy__comptype_template(const OPTIONAL<ListOfDummy__comptype>& other_value);
ListOfDummy__comptype_template(const ListOfDummy__comptype_template& other_value);
~ListOfDummy__comptype_template();

void clean_up();
ListOfDummy__comptype_template& operator=(template_sel other_value);
ListOfDummy__comptype_template& operator=(null_type other_value);
ListOfDummy__comptype_template& operator=(const ListOfDummy__comptype& other_value);
ListOfDummy__comptype_template& operator=(const OPTIONAL<ListOfDummy__comptype>& other_value);
ListOfDummy__comptype_template& operator=(const ListOfDummy__comptype_template& other_value);

COMPONENT_template& operator[](int index_value);
COMPONENT_template& operator[](const INTEGER& index_value);
const COMPONENT_template& operator[](int index_value) const;
const COMPONENT_template& operator[](const INTEGER& index_value) const;

void set_size(int new_size);
int n_elem() const;
int size_of(boolean is_size) const;
inline int size_of() const { return size_of(TRUE); }
inline int lengthof() const { return size_of(FALSE); }
boolean match(const ListOfDummy__comptype& other_value, boolean legacy = FALSE) const;
inline boolean is_bound() const 
  {return template_selection != UNINITIALIZED_TEMPLATE; }
boolean is_value() const;
ListOfDummy__comptype valueof() const;
ListOfDummy__comptype substr(int index, int returncount) const;

ListOfDummy__comptype replace(int index, int len, const ListOfDummy__comptype_template& repl) const;

ListOfDummy__comptype replace(int index, int len, const ListOfDummy__comptype& repl) const;

void set_type(template_sel template_type, unsigned int list_length);
ListOfDummy__comptype_template& list_item(unsigned int list_index);
void log() const;
void log_match(const ListOfDummy__comptype& match_value, boolean legacy = FALSE) const;
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
boolean is_present(boolean legacy = FALSE) const;
boolean match_omit(boolean legacy = FALSE) const;
void set_param(Module_Param& param);
void check_restriction(template_res t_res, const char* t_name=NULL, boolean legacy = FALSE) const;
boolean get_istemplate_kind(const char* type) const;
};

class ListOfDummy__CT : public Base_Type {
struct recordof_setof_struct {
int ref_count;
int n_elements;
COMPONENT **value_elements;
} *val_ptr;

static const COMPONENT UNBOUND_ELEM;
private:
friend boolean operator==(null_type null_value, const ListOfDummy__CT& other_value);

public:
  typedef COMPONENT of_type;
ListOfDummy__CT();
ListOfDummy__CT(null_type other_value);
ListOfDummy__CT(const ListOfDummy__CT& other_value);
~ListOfDummy__CT();

void clean_up();
ListOfDummy__CT& operator=(null_type other_value);
ListOfDummy__CT& operator=(const ListOfDummy__CT& other_value);

boolean operator==(null_type other_value) const;
boolean operator==(const ListOfDummy__CT& other_value) const;
inline boolean operator!=(null_type other_value) const { return !(*this == other_value); }
inline boolean operator!=(const ListOfDummy__CT& other_value) const { return !(*this == other_value); }

COMPONENT& operator[](int index_value);
COMPONENT& operator[](const INTEGER& index_value);
const COMPONENT& operator[](int index_value) const;
const COMPONENT& operator[](const INTEGER& index_value) const;

ListOfDummy__CT operator<<=(int rotate_count) const;
ListOfDummy__CT operator<<=(const INTEGER& rotate_count) const;
ListOfDummy__CT operator>>=(int rotate_count) const;
ListOfDummy__CT operator>>=(const INTEGER& rotate_count) const;

ListOfDummy__CT operator+(const ListOfDummy__CT& other_value) const;

ListOfDummy__CT substr(int index, int returncount) const;

ListOfDummy__CT replace(int index, int len, const ListOfDummy__CT& repl) const;

ListOfDummy__CT replace(int index, int len, const ListOfDummy__CT_template& repl) const;

void set_size(int new_size);
inline boolean is_bound() const {return val_ptr != NULL; }
inline boolean is_present() const { return is_bound(); }
boolean is_value() const;
int size_of() const;
int n_elem() const { return size_of(); }
int lengthof() const;
void log() const;
void set_param(Module_Param& param);
  void set_implicit_omit();
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
};

class ListOfDummy__CT_template : public Record_Of_Template {
union {
struct {
int n_elements;
COMPONENT_template **value_elements;
} single_value;
struct {
unsigned int n_values;
ListOfDummy__CT_template *list_value;
} value_list;
};
void copy_value(const ListOfDummy__CT& other_value);
void copy_template(const ListOfDummy__CT_template& other_value);
static boolean match_function_specific(const Base_Type *value_ptr, int value_index, const Restricted_Length_Template *template_ptr, int template_index, boolean legacy);

public:
ListOfDummy__CT_template();
ListOfDummy__CT_template(template_sel other_value);
ListOfDummy__CT_template(null_type other_value);
ListOfDummy__CT_template(const ListOfDummy__CT& other_value);
ListOfDummy__CT_template(const OPTIONAL<ListOfDummy__CT>& other_value);
ListOfDummy__CT_template(const ListOfDummy__CT_template& other_value);
~ListOfDummy__CT_template();

void clean_up();
ListOfDummy__CT_template& operator=(template_sel other_value);
ListOfDummy__CT_template& operator=(null_type other_value);
ListOfDummy__CT_template& operator=(const ListOfDummy__CT& other_value);
ListOfDummy__CT_template& operator=(const OPTIONAL<ListOfDummy__CT>& other_value);
ListOfDummy__CT_template& operator=(const ListOfDummy__CT_template& other_value);

COMPONENT_template& operator[](int index_value);
COMPONENT_template& operator[](const INTEGER& index_value);
const COMPONENT_template& operator[](int index_value) const;
const COMPONENT_template& operator[](const INTEGER& index_value) const;

void set_size(int new_size);
int n_elem() const;
int size_of(boolean is_size) const;
inline int size_of() const { return size_of(TRUE); }
inline int lengthof() const { return size_of(FALSE); }
boolean match(const ListOfDummy__CT& other_value, boolean legacy = FALSE) const;
inline boolean is_bound() const 
  {return template_selection != UNINITIALIZED_TEMPLATE; }
boolean is_value() const;
ListOfDummy__CT valueof() const;
ListOfDummy__CT substr(int index, int returncount) const;

ListOfDummy__CT replace(int index, int len, const ListOfDummy__CT_template& repl) const;

ListOfDummy__CT replace(int index, int len, const ListOfDummy__CT& repl) const;

void set_type(template_sel template_type, unsigned int list_length);
ListOfDummy__CT_template& list_item(unsigned int list_index);
void log() const;
void log_match(const ListOfDummy__CT& match_value, boolean legacy = FALSE) const;
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
boolean is_present(boolean legacy = FALSE) const;
boolean match_omit(boolean legacy = FALSE) const;
void set_param(Module_Param& param);
void check_restriction(template_res t_res, const char* t_name=NULL, boolean legacy = FALSE) const;
boolean get_istemplate_kind(const char* type) const;
};

class ProtocolList : public Base_Type {
struct recordof_setof_struct {
int ref_count;
int n_elements;
Protocols **value_elements;
} *val_ptr;

static const Protocols UNBOUND_ELEM;
private:
friend boolean operator==(null_type null_value, const ProtocolList& other_value);

public:
  typedef Protocols of_type;
ProtocolList();
ProtocolList(null_type other_value);
ProtocolList(const ProtocolList& other_value);
~ProtocolList();

void clean_up();
ProtocolList& operator=(null_type other_value);
ProtocolList& operator=(const ProtocolList& other_value);

boolean operator==(null_type other_value) const;
boolean operator==(const ProtocolList& other_value) const;
inline boolean operator!=(null_type other_value) const { return !(*this == other_value); }
inline boolean operator!=(const ProtocolList& other_value) const { return !(*this == other_value); }

Protocols& operator[](int index_value);
Protocols& operator[](const INTEGER& index_value);
const Protocols& operator[](int index_value) const;
const Protocols& operator[](const INTEGER& index_value) const;

ProtocolList operator<<=(int rotate_count) const;
ProtocolList operator<<=(const INTEGER& rotate_count) const;
ProtocolList operator>>=(int rotate_count) const;
ProtocolList operator>>=(const INTEGER& rotate_count) const;

ProtocolList operator+(const ProtocolList& other_value) const;

ProtocolList substr(int index, int returncount) const;

ProtocolList replace(int index, int len, const ProtocolList& repl) const;

ProtocolList replace(int index, int len, const ProtocolList_template& repl) const;

void set_size(int new_size);
inline boolean is_bound() const {return val_ptr != NULL; }
inline boolean is_present() const { return is_bound(); }
boolean is_value() const;
int size_of() const;
int n_elem() const { return size_of(); }
int lengthof() const;
void log() const;
void set_param(Module_Param& param);
  void set_implicit_omit();
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
void encode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, TTCN_EncDec::coding_t, ...) const;
void decode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, TTCN_EncDec::coding_t, ...);
int RAW_encode(const TTCN_Typedescriptor_t&, RAW_enc_tree&) const;
int RAW_decode(const TTCN_Typedescriptor_t&, TTCN_Buffer&, int, raw_order_t, boolean no_err=FALSE,int sel_field=-1, boolean first_call=TRUE, const RAW_Force_Omit* force_omit = NULL);
};

class ProtocolList_template : public Record_Of_Template {
union {
struct {
int n_elements;
Protocols_template **value_elements;
} single_value;
struct {
unsigned int n_values;
ProtocolList_template *list_value;
} value_list;
};
void copy_value(const ProtocolList& other_value);
void copy_template(const ProtocolList_template& other_value);
static boolean match_function_specific(const Base_Type *value_ptr, int value_index, const Restricted_Length_Template *template_ptr, int template_index, boolean legacy);

public:
ProtocolList_template();
ProtocolList_template(template_sel other_value);
ProtocolList_template(null_type other_value);
ProtocolList_template(const ProtocolList& other_value);
ProtocolList_template(const OPTIONAL<ProtocolList>& other_value);
ProtocolList_template(const ProtocolList_template& other_value);
~ProtocolList_template();

void clean_up();
ProtocolList_template& operator=(template_sel other_value);
ProtocolList_template& operator=(null_type other_value);
ProtocolList_template& operator=(const ProtocolList& other_value);
ProtocolList_template& operator=(const OPTIONAL<ProtocolList>& other_value);
ProtocolList_template& operator=(const ProtocolList_template& other_value);

Protocols_template& operator[](int index_value);
Protocols_template& operator[](const INTEGER& index_value);
const Protocols_template& operator[](int index_value) const;
const Protocols_template& operator[](const INTEGER& index_value) const;

void set_size(int new_size);
int n_elem() const;
int size_of(boolean is_size) const;
inline int size_of() const { return size_of(TRUE); }
inline int lengthof() const { return size_of(FALSE); }
boolean match(const ProtocolList& other_value, boolean legacy = FALSE) const;
inline boolean is_bound() const 
  {return template_selection != UNINITIALIZED_TEMPLATE; }
boolean is_value() const;
ProtocolList valueof() const;
ProtocolList substr(int index, int returncount) const;

ProtocolList replace(int index, int len, const ProtocolList_template& repl) const;

ProtocolList replace(int index, int len, const ProtocolList& repl) const;

void set_type(template_sel template_type, unsigned int list_length);
ProtocolList_template& list_item(unsigned int list_index);
void log() const;
void log_match(const ProtocolList& match_value, boolean legacy = FALSE) const;
void encode_text(Text_Buf& text_buf) const;
void decode_text(Text_Buf& text_buf);
boolean is_present(boolean legacy = FALSE) const;
boolean match_omit(boolean legacy = FALSE) const;
void set_param(Module_Param& param);
void check_restriction(template_res t_res, const char* t_name=NULL, boolean legacy = FALSE) const;
boolean get_istemplate_kind(const char* type) const;
};


/* Function prototypes */

extern void BIT1n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT1n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT2n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT2n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT3n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT3n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT4n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT4n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT5n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT5n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT6n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT6n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT7n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT7n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT8n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT8n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT9n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT9n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT12n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT12n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT14n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT14n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT15n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT15n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT16n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT16n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT56n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT56n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT14__24n_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT14__24n_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT1np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT1np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT2np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT2np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT3np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT3np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT4np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT4np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT5np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT5np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT6np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT6np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT7np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT7np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT15np_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT15np_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT1_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT1_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT2_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT2_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT3_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT3_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT4_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT4_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT5_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT5_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT6_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT6_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT7_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT7_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT8_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT8_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT9_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT9_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT10_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT10_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT11_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT11_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT12_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT12_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT13_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT13_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT14_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT14_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT15_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT15_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT16_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT16_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT24_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT24_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT28_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT28_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT29_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT29_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT30_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT30_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT31_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT31_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT32_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT32_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT56_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT56_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT0n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT0n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT2n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT2n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT4n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT4n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT5n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT5n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT6n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT6n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT7n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT7n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT8n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT8n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT9n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT9n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT10n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT10n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT11n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT11n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT12n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT12n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT13n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT13n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT14n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT14n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT15n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT15n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT16n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT16n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT17n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT17n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT18n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT18n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT19n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT19n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT20n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT20n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT28n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT28n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT32n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT32n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT34n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT34n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT46n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT46n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT50n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT50n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT69n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT69n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT100n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT100n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT128n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT128n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT500n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT500n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCTNn_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCTNn_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__3n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__3n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__4n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__4n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__5n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__5n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__6n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__6n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__7n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__7n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__8n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__8n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__12n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__12n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__15n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__15n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__16n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__16n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__18n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__18n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__20n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__20n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__24n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__24n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__32n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__32n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__34n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__34n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__46n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__46n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__50n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__50n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__112n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__112n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__127n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__127n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__128n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__128n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__172n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__172n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3__5n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3__5n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3__7n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3__7n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3__8n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3__8n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3__14n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3__14n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3__17n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3__17n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT4__8n_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT4__8n_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void CHAR4_encoder(const CHARSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER CHAR4_decoder(OCTETSTRING& input_stream, CHARSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX4n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX4n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX6n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX6n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX8n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX8n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX15n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX15n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX16n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX16n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX24n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX24n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX0__3n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX0__3n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX0__18n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX0__18n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX1__20n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX1__20n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX1__34n_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX1__34n_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT3nb_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT3nb_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT4nb_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT4nb_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT5nb_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT5nb_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT8nb_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT8nb_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT2nbp_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT2nbp_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT1nbp_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT1nbp_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT3nbp_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT3nbp_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT5nbp_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT5nbp_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT9nbp_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT9nbp_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT13nbp_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT13nbp_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT15nbp_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT15nbp_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT6__BO__LAST_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT6__BO__LAST_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT16__BO__LAST_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT16__BO__LAST_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void BIT32__BO__LAST_encoder(const BITSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER BIT32__BO__LAST_decoder(OCTETSTRING& input_stream, BITSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void Dummy_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER Dummy_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT0_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT0_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT2_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT2_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT4_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT4_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT5_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT5_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT6_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT6_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT7_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT7_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT8_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT8_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT9_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT9_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT10_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT10_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT11_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT11_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT12_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT12_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT13_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT13_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT14_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT14_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT15_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT15_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT16_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT16_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT17_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT17_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT18_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT18_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT19_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT19_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT20_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT20_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT22_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT22_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT32_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT32_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT34_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT34_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT46_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT46_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__260_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__260_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__8_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__8_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__12_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__12_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__32_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__32_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1__50_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1__50_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3__8_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3__8_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCTN_encoder(const OCTETSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCTN_decoder(OCTETSTRING& input_stream, OCTETSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX1_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX1_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX0__16_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX0__16_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX5__16_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX5__16_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void HEX1__32_encoder(const HEXSTRING& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER HEX1__32_decoder(OCTETSTRING& input_stream, HEXSTRING& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT1_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT1_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void LIN1_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER LIN1_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void LIN2_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER LIN2_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void LIN2__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER LIN2__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void LIN3__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER LIN3__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void LIN4__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER LIN4__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT1b_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT1b_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT2b_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT2b_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT3b_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT3b_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT4b_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT4b_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT5b_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT5b_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT6b_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT6b_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT7b_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT7b_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT11b__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT11b__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT12b__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT12b__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT13b__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT13b__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT14b__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT14b__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT18b__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT18b__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT20b__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT20b__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void INT31b__BO__LAST_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER INT31b__BO__LAST_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void Integers_0_encoder(const INTEGER& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER Integers_0_decoder(OCTETSTRING& input_stream, INTEGER& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void Integers_encoder(const Integers& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER Integers_decoder(OCTETSTRING& input_stream, Integers& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern boolean operator==(null_type null_value, const Integer__array& other_value);
inline boolean operator!=(null_type null_value, const Integer__array& other_value) { return !(null_value == other_value); }
extern void Integer__array_encoder(const Integer__array& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER Integer__array_decoder(OCTETSTRING& input_stream, Integer__array& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void Protocols_encoder(const Protocols& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER Protocols_decoder(OCTETSTRING& input_stream, Protocols& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT1List_encoder(const OCT1List& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT1List_decoder(OCTETSTRING& input_stream, OCT1List& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT2List_encoder(const OCT2List& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT2List_decoder(OCTETSTRING& input_stream, OCT2List& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT3List_encoder(const OCT3List& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT3List_decoder(OCTETSTRING& input_stream, OCT3List& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT4List_encoder(const OCT4List& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT4List_decoder(OCTETSTRING& input_stream, OCT4List& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT5List_encoder(const OCT5List& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT5List_decoder(OCTETSTRING& input_stream, OCT5List& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT6List_encoder(const OCT6List& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT6List_decoder(OCTETSTRING& input_stream, OCT6List& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern void OCT7List_encoder(const OCT7List& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER OCT7List_decoder(OCTETSTRING& input_stream, OCT7List& output_value, const UNIVERSAL_CHARSTRING& coding_name);
extern boolean operator==(null_type null_value, const ListOfDummy__comptype& other_value);
inline boolean operator!=(null_type null_value, const ListOfDummy__comptype& other_value) { return !(null_value == other_value); }
extern boolean operator==(null_type null_value, const ListOfDummy__CT& other_value);
inline boolean operator!=(null_type null_value, const ListOfDummy__CT& other_value) { return !(null_value == other_value); }
extern boolean operator==(null_type null_value, const ProtocolList& other_value);
inline boolean operator!=(null_type null_value, const ProtocolList& other_value) { return !(null_value == other_value); }
extern void ProtocolList_encoder(const ProtocolList& input_value, OCTETSTRING& output_stream, const UNIVERSAL_CHARSTRING& coding_name);
extern INTEGER ProtocolList_decoder(OCTETSTRING& input_stream, ProtocolList& output_value, const UNIVERSAL_CHARSTRING& coding_name);

/* Global variable declarations */

extern const TTCN_RAWdescriptor_t BIT1n_raw_;
extern const XERdescriptor_t BIT1n_xer_;
extern const TTCN_Typedescriptor_t BIT1n_descr_;
extern UNIVERSAL_CHARSTRING BIT1n_default_coding;
extern const TTCN_RAWdescriptor_t BIT2n_raw_;
extern const XERdescriptor_t BIT2n_xer_;
extern const TTCN_Typedescriptor_t BIT2n_descr_;
extern UNIVERSAL_CHARSTRING BIT2n_default_coding;
extern const TTCN_RAWdescriptor_t BIT3n_raw_;
extern const XERdescriptor_t BIT3n_xer_;
extern const TTCN_Typedescriptor_t BIT3n_descr_;
extern UNIVERSAL_CHARSTRING BIT3n_default_coding;
extern const TTCN_RAWdescriptor_t BIT4n_raw_;
extern const XERdescriptor_t BIT4n_xer_;
extern const TTCN_Typedescriptor_t BIT4n_descr_;
extern UNIVERSAL_CHARSTRING BIT4n_default_coding;
extern const TTCN_RAWdescriptor_t BIT5n_raw_;
extern const XERdescriptor_t BIT5n_xer_;
extern const TTCN_Typedescriptor_t BIT5n_descr_;
extern UNIVERSAL_CHARSTRING BIT5n_default_coding;
extern const TTCN_RAWdescriptor_t BIT6n_raw_;
extern const XERdescriptor_t BIT6n_xer_;
extern const TTCN_Typedescriptor_t BIT6n_descr_;
extern UNIVERSAL_CHARSTRING BIT6n_default_coding;
extern const TTCN_RAWdescriptor_t BIT7n_raw_;
extern const XERdescriptor_t BIT7n_xer_;
extern const TTCN_Typedescriptor_t BIT7n_descr_;
extern UNIVERSAL_CHARSTRING BIT7n_default_coding;
extern const TTCN_RAWdescriptor_t BIT8n_raw_;
extern const XERdescriptor_t BIT8n_xer_;
extern const TTCN_Typedescriptor_t BIT8n_descr_;
extern UNIVERSAL_CHARSTRING BIT8n_default_coding;
extern const TTCN_RAWdescriptor_t BIT9n_raw_;
extern const XERdescriptor_t BIT9n_xer_;
extern const TTCN_Typedescriptor_t BIT9n_descr_;
extern UNIVERSAL_CHARSTRING BIT9n_default_coding;
extern const TTCN_RAWdescriptor_t BIT12n_raw_;
extern const XERdescriptor_t BIT12n_xer_;
extern const TTCN_Typedescriptor_t BIT12n_descr_;
extern UNIVERSAL_CHARSTRING BIT12n_default_coding;
extern const TTCN_RAWdescriptor_t BIT14n_raw_;
extern const XERdescriptor_t BIT14n_xer_;
extern const TTCN_Typedescriptor_t BIT14n_descr_;
extern UNIVERSAL_CHARSTRING BIT14n_default_coding;
extern const TTCN_RAWdescriptor_t BIT15n_raw_;
extern const XERdescriptor_t BIT15n_xer_;
extern const TTCN_Typedescriptor_t BIT15n_descr_;
extern UNIVERSAL_CHARSTRING BIT15n_default_coding;
extern const TTCN_RAWdescriptor_t BIT16n_raw_;
extern const XERdescriptor_t BIT16n_xer_;
extern const TTCN_Typedescriptor_t BIT16n_descr_;
extern UNIVERSAL_CHARSTRING BIT16n_default_coding;
extern const TTCN_RAWdescriptor_t BIT56n_raw_;
extern const XERdescriptor_t BIT56n_xer_;
extern const TTCN_Typedescriptor_t BIT56n_descr_;
extern UNIVERSAL_CHARSTRING BIT56n_default_coding;
extern const XERdescriptor_t BIT14__24n_xer_;
extern const TTCN_Typedescriptor_t BIT14__24n_descr_;
extern UNIVERSAL_CHARSTRING BIT14__24n_default_coding;
extern const TTCN_RAWdescriptor_t BIT1np_raw_;
extern const XERdescriptor_t BIT1np_xer_;
extern const TTCN_Typedescriptor_t BIT1np_descr_;
extern UNIVERSAL_CHARSTRING BIT1np_default_coding;
extern const TTCN_RAWdescriptor_t BIT2np_raw_;
extern const XERdescriptor_t BIT2np_xer_;
extern const TTCN_Typedescriptor_t BIT2np_descr_;
extern UNIVERSAL_CHARSTRING BIT2np_default_coding;
extern const TTCN_RAWdescriptor_t BIT3np_raw_;
extern const XERdescriptor_t BIT3np_xer_;
extern const TTCN_Typedescriptor_t BIT3np_descr_;
extern UNIVERSAL_CHARSTRING BIT3np_default_coding;
extern const TTCN_RAWdescriptor_t BIT4np_raw_;
extern const XERdescriptor_t BIT4np_xer_;
extern const TTCN_Typedescriptor_t BIT4np_descr_;
extern UNIVERSAL_CHARSTRING BIT4np_default_coding;
extern const TTCN_RAWdescriptor_t BIT5np_raw_;
extern const XERdescriptor_t BIT5np_xer_;
extern const TTCN_Typedescriptor_t BIT5np_descr_;
extern UNIVERSAL_CHARSTRING BIT5np_default_coding;
extern const TTCN_RAWdescriptor_t BIT6np_raw_;
extern const XERdescriptor_t BIT6np_xer_;
extern const TTCN_Typedescriptor_t BIT6np_descr_;
extern UNIVERSAL_CHARSTRING BIT6np_default_coding;
extern const TTCN_RAWdescriptor_t BIT7np_raw_;
extern const XERdescriptor_t BIT7np_xer_;
extern const TTCN_Typedescriptor_t BIT7np_descr_;
extern UNIVERSAL_CHARSTRING BIT7np_default_coding;
extern const TTCN_RAWdescriptor_t BIT15np_raw_;
extern const XERdescriptor_t BIT15np_xer_;
extern const TTCN_Typedescriptor_t BIT15np_descr_;
extern UNIVERSAL_CHARSTRING BIT15np_default_coding;
extern const TTCN_RAWdescriptor_t BIT1_raw_;
extern const XERdescriptor_t BIT1_xer_;
extern const TTCN_OERdescriptor_t BIT1_oer_;
extern const TTCN_Typedescriptor_t BIT1_descr_;
extern UNIVERSAL_CHARSTRING BIT1_default_coding;
extern const TTCN_RAWdescriptor_t BIT2_raw_;
extern const XERdescriptor_t BIT2_xer_;
extern const TTCN_OERdescriptor_t BIT2_oer_;
extern const TTCN_Typedescriptor_t BIT2_descr_;
extern UNIVERSAL_CHARSTRING BIT2_default_coding;
extern const TTCN_RAWdescriptor_t BIT3_raw_;
extern const XERdescriptor_t BIT3_xer_;
extern const TTCN_OERdescriptor_t BIT3_oer_;
extern const TTCN_Typedescriptor_t BIT3_descr_;
extern UNIVERSAL_CHARSTRING BIT3_default_coding;
extern const TTCN_RAWdescriptor_t BIT4_raw_;
extern const XERdescriptor_t BIT4_xer_;
extern const TTCN_OERdescriptor_t BIT4_oer_;
extern const TTCN_Typedescriptor_t BIT4_descr_;
extern UNIVERSAL_CHARSTRING BIT4_default_coding;
extern const TTCN_RAWdescriptor_t BIT5_raw_;
extern const XERdescriptor_t BIT5_xer_;
extern const TTCN_OERdescriptor_t BIT5_oer_;
extern const TTCN_Typedescriptor_t BIT5_descr_;
extern UNIVERSAL_CHARSTRING BIT5_default_coding;
extern const TTCN_RAWdescriptor_t BIT6_raw_;
extern const XERdescriptor_t BIT6_xer_;
extern const TTCN_OERdescriptor_t BIT6_oer_;
extern const TTCN_Typedescriptor_t BIT6_descr_;
extern UNIVERSAL_CHARSTRING BIT6_default_coding;
extern const TTCN_RAWdescriptor_t BIT7_raw_;
extern const XERdescriptor_t BIT7_xer_;
extern const TTCN_OERdescriptor_t BIT7_oer_;
extern const TTCN_Typedescriptor_t BIT7_descr_;
extern UNIVERSAL_CHARSTRING BIT7_default_coding;
extern const TTCN_RAWdescriptor_t BIT8_raw_;
extern const XERdescriptor_t BIT8_xer_;
extern const TTCN_OERdescriptor_t BIT8_oer_;
extern const TTCN_Typedescriptor_t BIT8_descr_;
extern UNIVERSAL_CHARSTRING BIT8_default_coding;
extern const TTCN_RAWdescriptor_t BIT9_raw_;
extern const XERdescriptor_t BIT9_xer_;
extern const TTCN_Typedescriptor_t BIT9_descr_;
extern UNIVERSAL_CHARSTRING BIT9_default_coding;
extern const TTCN_RAWdescriptor_t BIT10_raw_;
extern const XERdescriptor_t BIT10_xer_;
extern const TTCN_OERdescriptor_t BIT10_oer_;
extern const TTCN_Typedescriptor_t BIT10_descr_;
extern UNIVERSAL_CHARSTRING BIT10_default_coding;
extern const TTCN_RAWdescriptor_t BIT11_raw_;
extern const XERdescriptor_t BIT11_xer_;
extern const TTCN_Typedescriptor_t BIT11_descr_;
extern UNIVERSAL_CHARSTRING BIT11_default_coding;
extern const TTCN_RAWdescriptor_t BIT12_raw_;
extern const XERdescriptor_t BIT12_xer_;
extern const TTCN_Typedescriptor_t BIT12_descr_;
extern UNIVERSAL_CHARSTRING BIT12_default_coding;
extern const TTCN_RAWdescriptor_t BIT13_raw_;
extern const XERdescriptor_t BIT13_xer_;
extern const TTCN_Typedescriptor_t BIT13_descr_;
extern UNIVERSAL_CHARSTRING BIT13_default_coding;
extern const TTCN_RAWdescriptor_t BIT14_raw_;
extern const XERdescriptor_t BIT14_xer_;
extern const TTCN_Typedescriptor_t BIT14_descr_;
extern UNIVERSAL_CHARSTRING BIT14_default_coding;
extern const TTCN_RAWdescriptor_t BIT15_raw_;
extern const XERdescriptor_t BIT15_xer_;
extern const TTCN_Typedescriptor_t BIT15_descr_;
extern UNIVERSAL_CHARSTRING BIT15_default_coding;
extern const TTCN_RAWdescriptor_t BIT16_raw_;
extern const XERdescriptor_t BIT16_xer_;
extern const TTCN_Typedescriptor_t BIT16_descr_;
extern UNIVERSAL_CHARSTRING BIT16_default_coding;
extern const TTCN_RAWdescriptor_t BIT24_raw_;
extern const XERdescriptor_t BIT24_xer_;
extern const TTCN_Typedescriptor_t BIT24_descr_;
extern UNIVERSAL_CHARSTRING BIT24_default_coding;
extern const TTCN_RAWdescriptor_t BIT28_raw_;
extern const XERdescriptor_t BIT28_xer_;
extern const TTCN_Typedescriptor_t BIT28_descr_;
extern UNIVERSAL_CHARSTRING BIT28_default_coding;
extern const TTCN_RAWdescriptor_t BIT29_raw_;
extern const XERdescriptor_t BIT29_xer_;
extern const TTCN_Typedescriptor_t BIT29_descr_;
extern UNIVERSAL_CHARSTRING BIT29_default_coding;
extern const TTCN_RAWdescriptor_t BIT30_raw_;
extern const XERdescriptor_t BIT30_xer_;
extern const TTCN_Typedescriptor_t BIT30_descr_;
extern UNIVERSAL_CHARSTRING BIT30_default_coding;
extern const TTCN_RAWdescriptor_t BIT31_raw_;
extern const XERdescriptor_t BIT31_xer_;
extern const TTCN_Typedescriptor_t BIT31_descr_;
extern UNIVERSAL_CHARSTRING BIT31_default_coding;
extern const TTCN_RAWdescriptor_t BIT32_raw_;
extern const XERdescriptor_t BIT32_xer_;
extern const TTCN_Typedescriptor_t BIT32_descr_;
extern UNIVERSAL_CHARSTRING BIT32_default_coding;
extern const TTCN_RAWdescriptor_t BIT56_raw_;
extern const XERdescriptor_t BIT56_xer_;
extern const TTCN_Typedescriptor_t BIT56_descr_;
extern UNIVERSAL_CHARSTRING BIT56_default_coding;
extern const TTCN_RAWdescriptor_t OCT0n_raw_;
extern const XERdescriptor_t OCT0n_xer_;
extern const TTCN_OERdescriptor_t OCT0n_oer_;
extern const TTCN_Typedescriptor_t OCT0n_descr_;
extern UNIVERSAL_CHARSTRING OCT0n_default_coding;
extern const TTCN_RAWdescriptor_t OCT1n_raw_;
extern const XERdescriptor_t OCT1n_xer_;
extern const TTCN_OERdescriptor_t OCT1n_oer_;
extern const TTCN_Typedescriptor_t OCT1n_descr_;
extern UNIVERSAL_CHARSTRING OCT1n_default_coding;
extern const TTCN_RAWdescriptor_t OCT2n_raw_;
extern const XERdescriptor_t OCT2n_xer_;
extern const TTCN_OERdescriptor_t OCT2n_oer_;
extern const TTCN_Typedescriptor_t OCT2n_descr_;
extern UNIVERSAL_CHARSTRING OCT2n_default_coding;
extern const TTCN_RAWdescriptor_t OCT3n_raw_;
extern const XERdescriptor_t OCT3n_xer_;
extern const TTCN_OERdescriptor_t OCT3n_oer_;
extern const TTCN_Typedescriptor_t OCT3n_descr_;
extern UNIVERSAL_CHARSTRING OCT3n_default_coding;
extern const TTCN_RAWdescriptor_t OCT4n_raw_;
extern const XERdescriptor_t OCT4n_xer_;
extern const TTCN_OERdescriptor_t OCT4n_oer_;
extern const TTCN_Typedescriptor_t OCT4n_descr_;
extern UNIVERSAL_CHARSTRING OCT4n_default_coding;
extern const TTCN_RAWdescriptor_t OCT5n_raw_;
extern const XERdescriptor_t OCT5n_xer_;
extern const TTCN_OERdescriptor_t OCT5n_oer_;
extern const TTCN_Typedescriptor_t OCT5n_descr_;
extern UNIVERSAL_CHARSTRING OCT5n_default_coding;
extern const TTCN_RAWdescriptor_t OCT6n_raw_;
extern const XERdescriptor_t OCT6n_xer_;
extern const TTCN_OERdescriptor_t OCT6n_oer_;
extern const TTCN_Typedescriptor_t OCT6n_descr_;
extern UNIVERSAL_CHARSTRING OCT6n_default_coding;
extern const TTCN_RAWdescriptor_t OCT7n_raw_;
extern const XERdescriptor_t OCT7n_xer_;
extern const TTCN_OERdescriptor_t OCT7n_oer_;
extern const TTCN_Typedescriptor_t OCT7n_descr_;
extern UNIVERSAL_CHARSTRING OCT7n_default_coding;
extern const TTCN_RAWdescriptor_t OCT8n_raw_;
extern const XERdescriptor_t OCT8n_xer_;
extern const TTCN_OERdescriptor_t OCT8n_oer_;
extern const TTCN_Typedescriptor_t OCT8n_descr_;
extern UNIVERSAL_CHARSTRING OCT8n_default_coding;
extern const TTCN_RAWdescriptor_t OCT9n_raw_;
extern const XERdescriptor_t OCT9n_xer_;
extern const TTCN_OERdescriptor_t OCT9n_oer_;
extern const TTCN_Typedescriptor_t OCT9n_descr_;
extern UNIVERSAL_CHARSTRING OCT9n_default_coding;
extern const TTCN_RAWdescriptor_t OCT10n_raw_;
extern const XERdescriptor_t OCT10n_xer_;
extern const TTCN_OERdescriptor_t OCT10n_oer_;
extern const TTCN_Typedescriptor_t OCT10n_descr_;
extern UNIVERSAL_CHARSTRING OCT10n_default_coding;
extern const TTCN_RAWdescriptor_t OCT11n_raw_;
extern const XERdescriptor_t OCT11n_xer_;
extern const TTCN_OERdescriptor_t OCT11n_oer_;
extern const TTCN_Typedescriptor_t OCT11n_descr_;
extern UNIVERSAL_CHARSTRING OCT11n_default_coding;
extern const TTCN_RAWdescriptor_t OCT12n_raw_;
extern const XERdescriptor_t OCT12n_xer_;
extern const TTCN_OERdescriptor_t OCT12n_oer_;
extern const TTCN_Typedescriptor_t OCT12n_descr_;
extern UNIVERSAL_CHARSTRING OCT12n_default_coding;
extern const TTCN_RAWdescriptor_t OCT13n_raw_;
extern const XERdescriptor_t OCT13n_xer_;
extern const TTCN_OERdescriptor_t OCT13n_oer_;
extern const TTCN_Typedescriptor_t OCT13n_descr_;
extern UNIVERSAL_CHARSTRING OCT13n_default_coding;
extern const TTCN_RAWdescriptor_t OCT14n_raw_;
extern const XERdescriptor_t OCT14n_xer_;
extern const TTCN_OERdescriptor_t OCT14n_oer_;
extern const TTCN_Typedescriptor_t OCT14n_descr_;
extern UNIVERSAL_CHARSTRING OCT14n_default_coding;
extern const TTCN_RAWdescriptor_t OCT15n_raw_;
extern const XERdescriptor_t OCT15n_xer_;
extern const TTCN_OERdescriptor_t OCT15n_oer_;
extern const TTCN_Typedescriptor_t OCT15n_descr_;
extern UNIVERSAL_CHARSTRING OCT15n_default_coding;
extern const TTCN_RAWdescriptor_t OCT16n_raw_;
extern const XERdescriptor_t OCT16n_xer_;
extern const TTCN_OERdescriptor_t OCT16n_oer_;
extern const TTCN_Typedescriptor_t OCT16n_descr_;
extern UNIVERSAL_CHARSTRING OCT16n_default_coding;
extern const TTCN_RAWdescriptor_t OCT17n_raw_;
extern const XERdescriptor_t OCT17n_xer_;
extern const TTCN_OERdescriptor_t OCT17n_oer_;
extern const TTCN_Typedescriptor_t OCT17n_descr_;
extern UNIVERSAL_CHARSTRING OCT17n_default_coding;
extern const TTCN_RAWdescriptor_t OCT18n_raw_;
extern const XERdescriptor_t OCT18n_xer_;
extern const TTCN_OERdescriptor_t OCT18n_oer_;
extern const TTCN_Typedescriptor_t OCT18n_descr_;
extern UNIVERSAL_CHARSTRING OCT18n_default_coding;
extern const TTCN_RAWdescriptor_t OCT19n_raw_;
extern const XERdescriptor_t OCT19n_xer_;
extern const TTCN_OERdescriptor_t OCT19n_oer_;
extern const TTCN_Typedescriptor_t OCT19n_descr_;
extern UNIVERSAL_CHARSTRING OCT19n_default_coding;
extern const TTCN_RAWdescriptor_t OCT20n_raw_;
extern const XERdescriptor_t OCT20n_xer_;
extern const TTCN_OERdescriptor_t OCT20n_oer_;
extern const TTCN_Typedescriptor_t OCT20n_descr_;
extern UNIVERSAL_CHARSTRING OCT20n_default_coding;
extern const TTCN_RAWdescriptor_t OCT28n_raw_;
extern const XERdescriptor_t OCT28n_xer_;
extern const TTCN_OERdescriptor_t OCT28n_oer_;
extern const TTCN_Typedescriptor_t OCT28n_descr_;
extern UNIVERSAL_CHARSTRING OCT28n_default_coding;
extern const TTCN_RAWdescriptor_t OCT32n_raw_;
extern const XERdescriptor_t OCT32n_xer_;
extern const TTCN_OERdescriptor_t OCT32n_oer_;
extern const TTCN_Typedescriptor_t OCT32n_descr_;
extern UNIVERSAL_CHARSTRING OCT32n_default_coding;
extern const TTCN_RAWdescriptor_t OCT34n_raw_;
extern const XERdescriptor_t OCT34n_xer_;
extern const TTCN_OERdescriptor_t OCT34n_oer_;
extern const TTCN_Typedescriptor_t OCT34n_descr_;
extern UNIVERSAL_CHARSTRING OCT34n_default_coding;
extern const TTCN_RAWdescriptor_t OCT46n_raw_;
extern const XERdescriptor_t OCT46n_xer_;
extern const TTCN_OERdescriptor_t OCT46n_oer_;
extern const TTCN_Typedescriptor_t OCT46n_descr_;
extern UNIVERSAL_CHARSTRING OCT46n_default_coding;
extern const TTCN_RAWdescriptor_t OCT50n_raw_;
extern const XERdescriptor_t OCT50n_xer_;
extern const TTCN_OERdescriptor_t OCT50n_oer_;
extern const TTCN_Typedescriptor_t OCT50n_descr_;
extern UNIVERSAL_CHARSTRING OCT50n_default_coding;
extern const TTCN_RAWdescriptor_t OCT69n_raw_;
extern const XERdescriptor_t OCT69n_xer_;
extern const TTCN_OERdescriptor_t OCT69n_oer_;
extern const TTCN_Typedescriptor_t OCT69n_descr_;
extern UNIVERSAL_CHARSTRING OCT69n_default_coding;
extern const TTCN_RAWdescriptor_t OCT100n_raw_;
extern const XERdescriptor_t OCT100n_xer_;
extern const TTCN_OERdescriptor_t OCT100n_oer_;
extern const TTCN_Typedescriptor_t OCT100n_descr_;
extern UNIVERSAL_CHARSTRING OCT100n_default_coding;
extern const TTCN_RAWdescriptor_t OCT128n_raw_;
extern const XERdescriptor_t OCT128n_xer_;
extern const TTCN_OERdescriptor_t OCT128n_oer_;
extern const TTCN_Typedescriptor_t OCT128n_descr_;
extern UNIVERSAL_CHARSTRING OCT128n_default_coding;
extern const TTCN_RAWdescriptor_t OCT500n_raw_;
extern const XERdescriptor_t OCT500n_xer_;
extern const TTCN_OERdescriptor_t OCT500n_oer_;
extern const TTCN_Typedescriptor_t OCT500n_descr_;
extern UNIVERSAL_CHARSTRING OCT500n_default_coding;
extern const XERdescriptor_t OCTNn_xer_;
extern const TTCN_OERdescriptor_t OCTNn_oer_;
extern const TTCN_Typedescriptor_t OCTNn_descr_;
extern UNIVERSAL_CHARSTRING OCTNn_default_coding;
extern const XERdescriptor_t OCT1__3n_xer_;
extern const TTCN_OERdescriptor_t OCT1__3n_oer_;
extern const TTCN_Typedescriptor_t OCT1__3n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__3n_default_coding;
extern const XERdescriptor_t OCT1__4n_xer_;
extern const TTCN_OERdescriptor_t OCT1__4n_oer_;
extern const TTCN_Typedescriptor_t OCT1__4n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__4n_default_coding;
extern const XERdescriptor_t OCT1__5n_xer_;
extern const TTCN_OERdescriptor_t OCT1__5n_oer_;
extern const TTCN_Typedescriptor_t OCT1__5n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__5n_default_coding;
extern const XERdescriptor_t OCT1__6n_xer_;
extern const TTCN_OERdescriptor_t OCT1__6n_oer_;
extern const TTCN_Typedescriptor_t OCT1__6n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__6n_default_coding;
extern const XERdescriptor_t OCT1__7n_xer_;
extern const TTCN_OERdescriptor_t OCT1__7n_oer_;
extern const TTCN_Typedescriptor_t OCT1__7n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__7n_default_coding;
extern const XERdescriptor_t OCT1__8n_xer_;
extern const TTCN_OERdescriptor_t OCT1__8n_oer_;
extern const TTCN_Typedescriptor_t OCT1__8n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__8n_default_coding;
extern const XERdescriptor_t OCT1__12n_xer_;
extern const TTCN_OERdescriptor_t OCT1__12n_oer_;
extern const TTCN_Typedescriptor_t OCT1__12n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__12n_default_coding;
extern const XERdescriptor_t OCT1__15n_xer_;
extern const TTCN_OERdescriptor_t OCT1__15n_oer_;
extern const TTCN_Typedescriptor_t OCT1__15n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__15n_default_coding;
extern const XERdescriptor_t OCT1__16n_xer_;
extern const TTCN_OERdescriptor_t OCT1__16n_oer_;
extern const TTCN_Typedescriptor_t OCT1__16n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__16n_default_coding;
extern const XERdescriptor_t OCT1__18n_xer_;
extern const TTCN_OERdescriptor_t OCT1__18n_oer_;
extern const TTCN_Typedescriptor_t OCT1__18n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__18n_default_coding;
extern const XERdescriptor_t OCT1__20n_xer_;
extern const TTCN_OERdescriptor_t OCT1__20n_oer_;
extern const TTCN_Typedescriptor_t OCT1__20n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__20n_default_coding;
extern const XERdescriptor_t OCT1__24n_xer_;
extern const TTCN_OERdescriptor_t OCT1__24n_oer_;
extern const TTCN_Typedescriptor_t OCT1__24n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__24n_default_coding;
extern const XERdescriptor_t OCT1__32n_xer_;
extern const TTCN_OERdescriptor_t OCT1__32n_oer_;
extern const TTCN_Typedescriptor_t OCT1__32n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__32n_default_coding;
extern const XERdescriptor_t OCT1__34n_xer_;
extern const TTCN_OERdescriptor_t OCT1__34n_oer_;
extern const TTCN_Typedescriptor_t OCT1__34n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__34n_default_coding;
extern const XERdescriptor_t OCT1__46n_xer_;
extern const TTCN_OERdescriptor_t OCT1__46n_oer_;
extern const TTCN_Typedescriptor_t OCT1__46n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__46n_default_coding;
extern const XERdescriptor_t OCT1__50n_xer_;
extern const TTCN_OERdescriptor_t OCT1__50n_oer_;
extern const TTCN_Typedescriptor_t OCT1__50n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__50n_default_coding;
extern const XERdescriptor_t OCT1__112n_xer_;
extern const TTCN_OERdescriptor_t OCT1__112n_oer_;
extern const TTCN_Typedescriptor_t OCT1__112n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__112n_default_coding;
extern const XERdescriptor_t OCT1__127n_xer_;
extern const TTCN_OERdescriptor_t OCT1__127n_oer_;
extern const TTCN_Typedescriptor_t OCT1__127n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__127n_default_coding;
extern const XERdescriptor_t OCT1__128n_xer_;
extern const TTCN_OERdescriptor_t OCT1__128n_oer_;
extern const TTCN_Typedescriptor_t OCT1__128n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__128n_default_coding;
extern const XERdescriptor_t OCT1__172n_xer_;
extern const TTCN_OERdescriptor_t OCT1__172n_oer_;
extern const TTCN_Typedescriptor_t OCT1__172n_descr_;
extern UNIVERSAL_CHARSTRING OCT1__172n_default_coding;
extern const XERdescriptor_t OCT3__5n_xer_;
extern const TTCN_OERdescriptor_t OCT3__5n_oer_;
extern const TTCN_Typedescriptor_t OCT3__5n_descr_;
extern UNIVERSAL_CHARSTRING OCT3__5n_default_coding;
extern const XERdescriptor_t OCT3__7n_xer_;
extern const TTCN_OERdescriptor_t OCT3__7n_oer_;
extern const TTCN_Typedescriptor_t OCT3__7n_descr_;
extern UNIVERSAL_CHARSTRING OCT3__7n_default_coding;
extern const XERdescriptor_t OCT3__8n_xer_;
extern const TTCN_OERdescriptor_t OCT3__8n_oer_;
extern const TTCN_Typedescriptor_t OCT3__8n_descr_;
extern UNIVERSAL_CHARSTRING OCT3__8n_default_coding;
extern const XERdescriptor_t OCT3__14n_xer_;
extern const TTCN_OERdescriptor_t OCT3__14n_oer_;
extern const TTCN_Typedescriptor_t OCT3__14n_descr_;
extern UNIVERSAL_CHARSTRING OCT3__14n_default_coding;
extern const XERdescriptor_t OCT3__17n_xer_;
extern const TTCN_OERdescriptor_t OCT3__17n_oer_;
extern const TTCN_Typedescriptor_t OCT3__17n_descr_;
extern UNIVERSAL_CHARSTRING OCT3__17n_default_coding;
extern const XERdescriptor_t OCT4__8n_xer_;
extern const TTCN_OERdescriptor_t OCT4__8n_oer_;
extern const TTCN_Typedescriptor_t OCT4__8n_descr_;
extern UNIVERSAL_CHARSTRING OCT4__8n_default_coding;
extern const TTCN_RAWdescriptor_t CHAR4_raw_;
extern const XERdescriptor_t CHAR4_xer_;
extern const TTCN_Typedescriptor_t CHAR4_descr_;
extern UNIVERSAL_CHARSTRING CHAR4_default_coding;
extern const TTCN_RAWdescriptor_t HEX4n_raw_;
extern const XERdescriptor_t HEX4n_xer_;
extern const TTCN_Typedescriptor_t HEX4n_descr_;
extern UNIVERSAL_CHARSTRING HEX4n_default_coding;
extern const TTCN_RAWdescriptor_t HEX6n_raw_;
extern const XERdescriptor_t HEX6n_xer_;
extern const TTCN_Typedescriptor_t HEX6n_descr_;
extern UNIVERSAL_CHARSTRING HEX6n_default_coding;
extern const TTCN_RAWdescriptor_t HEX8n_raw_;
extern const XERdescriptor_t HEX8n_xer_;
extern const TTCN_Typedescriptor_t HEX8n_descr_;
extern UNIVERSAL_CHARSTRING HEX8n_default_coding;
extern const TTCN_RAWdescriptor_t HEX15n_raw_;
extern const XERdescriptor_t HEX15n_xer_;
extern const TTCN_Typedescriptor_t HEX15n_descr_;
extern UNIVERSAL_CHARSTRING HEX15n_default_coding;
extern const TTCN_RAWdescriptor_t HEX16n_raw_;
extern const XERdescriptor_t HEX16n_xer_;
extern const TTCN_Typedescriptor_t HEX16n_descr_;
extern UNIVERSAL_CHARSTRING HEX16n_default_coding;
extern const TTCN_RAWdescriptor_t HEX24n_raw_;
extern const XERdescriptor_t HEX24n_xer_;
extern const TTCN_Typedescriptor_t HEX24n_descr_;
extern UNIVERSAL_CHARSTRING HEX24n_default_coding;
extern const XERdescriptor_t HEX0__3n_xer_;
extern const TTCN_Typedescriptor_t HEX0__3n_descr_;
extern UNIVERSAL_CHARSTRING HEX0__3n_default_coding;
extern const XERdescriptor_t HEX0__18n_xer_;
extern const TTCN_Typedescriptor_t HEX0__18n_descr_;
extern UNIVERSAL_CHARSTRING HEX0__18n_default_coding;
extern const XERdescriptor_t HEX1__20n_xer_;
extern const TTCN_Typedescriptor_t HEX1__20n_descr_;
extern UNIVERSAL_CHARSTRING HEX1__20n_default_coding;
extern const XERdescriptor_t HEX1__34n_xer_;
extern const TTCN_Typedescriptor_t HEX1__34n_descr_;
extern UNIVERSAL_CHARSTRING HEX1__34n_default_coding;
extern const XERdescriptor_t INT3nb_xer_;
extern const TTCN_Typedescriptor_t INT3nb_descr_;
extern UNIVERSAL_CHARSTRING INT3nb_default_coding;
extern const XERdescriptor_t INT4nb_xer_;
extern const TTCN_Typedescriptor_t INT4nb_descr_;
extern UNIVERSAL_CHARSTRING INT4nb_default_coding;
extern const XERdescriptor_t INT5nb_xer_;
extern const TTCN_Typedescriptor_t INT5nb_descr_;
extern UNIVERSAL_CHARSTRING INT5nb_default_coding;
extern const XERdescriptor_t INT8nb_xer_;
extern const TTCN_Typedescriptor_t INT8nb_descr_;
extern UNIVERSAL_CHARSTRING INT8nb_default_coding;
extern const XERdescriptor_t INT2nbp_xer_;
extern const TTCN_Typedescriptor_t INT2nbp_descr_;
extern UNIVERSAL_CHARSTRING INT2nbp_default_coding;
extern const XERdescriptor_t INT1nbp_xer_;
extern const TTCN_Typedescriptor_t INT1nbp_descr_;
extern UNIVERSAL_CHARSTRING INT1nbp_default_coding;
extern const XERdescriptor_t INT3nbp_xer_;
extern const TTCN_Typedescriptor_t INT3nbp_descr_;
extern UNIVERSAL_CHARSTRING INT3nbp_default_coding;
extern const XERdescriptor_t INT5nbp_xer_;
extern const TTCN_Typedescriptor_t INT5nbp_descr_;
extern UNIVERSAL_CHARSTRING INT5nbp_default_coding;
extern const XERdescriptor_t INT9nbp_xer_;
extern const TTCN_Typedescriptor_t INT9nbp_descr_;
extern UNIVERSAL_CHARSTRING INT9nbp_default_coding;
extern const XERdescriptor_t INT13nbp_xer_;
extern const TTCN_Typedescriptor_t INT13nbp_descr_;
extern UNIVERSAL_CHARSTRING INT13nbp_default_coding;
extern const XERdescriptor_t INT15nbp_xer_;
extern const TTCN_Typedescriptor_t INT15nbp_descr_;
extern UNIVERSAL_CHARSTRING INT15nbp_default_coding;
extern const TTCN_RAWdescriptor_t BIT6__BO__LAST_raw_;
extern const XERdescriptor_t BIT6__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t BIT6__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING BIT6__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t BIT16__BO__LAST_raw_;
extern const XERdescriptor_t BIT16__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t BIT16__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING BIT16__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t BIT32__BO__LAST_raw_;
extern const XERdescriptor_t BIT32__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t BIT32__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING BIT32__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t Dummy_raw_;
extern const XERdescriptor_t Dummy_xer_;
extern const TTCN_OERdescriptor_t Dummy_oer_;
extern const TTCN_Typedescriptor_t Dummy_descr_;
extern UNIVERSAL_CHARSTRING Dummy_default_coding;
extern const TTCN_RAWdescriptor_t OCT0_raw_;
extern const XERdescriptor_t OCT0_xer_;
extern const TTCN_OERdescriptor_t OCT0_oer_;
extern const TTCN_Typedescriptor_t OCT0_descr_;
extern UNIVERSAL_CHARSTRING OCT0_default_coding;
extern const TTCN_RAWdescriptor_t OCT1_raw_;
extern const XERdescriptor_t OCT1_xer_;
extern const TTCN_OERdescriptor_t OCT1_oer_;
extern const TTCN_Typedescriptor_t OCT1_descr_;
extern UNIVERSAL_CHARSTRING OCT1_default_coding;
extern const TTCN_RAWdescriptor_t OCT2_raw_;
extern const XERdescriptor_t OCT2_xer_;
extern const TTCN_OERdescriptor_t OCT2_oer_;
extern const TTCN_Typedescriptor_t OCT2_descr_;
extern UNIVERSAL_CHARSTRING OCT2_default_coding;
extern const TTCN_RAWdescriptor_t OCT3_raw_;
extern const XERdescriptor_t OCT3_xer_;
extern const TTCN_OERdescriptor_t OCT3_oer_;
extern const TTCN_Typedescriptor_t OCT3_descr_;
extern UNIVERSAL_CHARSTRING OCT3_default_coding;
extern const TTCN_RAWdescriptor_t OCT4_raw_;
extern const XERdescriptor_t OCT4_xer_;
extern const TTCN_OERdescriptor_t OCT4_oer_;
extern const TTCN_Typedescriptor_t OCT4_descr_;
extern UNIVERSAL_CHARSTRING OCT4_default_coding;
extern const TTCN_RAWdescriptor_t OCT5_raw_;
extern const XERdescriptor_t OCT5_xer_;
extern const TTCN_OERdescriptor_t OCT5_oer_;
extern const TTCN_Typedescriptor_t OCT5_descr_;
extern UNIVERSAL_CHARSTRING OCT5_default_coding;
extern const TTCN_RAWdescriptor_t OCT6_raw_;
extern const XERdescriptor_t OCT6_xer_;
extern const TTCN_OERdescriptor_t OCT6_oer_;
extern const TTCN_Typedescriptor_t OCT6_descr_;
extern UNIVERSAL_CHARSTRING OCT6_default_coding;
extern const TTCN_RAWdescriptor_t OCT7_raw_;
extern const XERdescriptor_t OCT7_xer_;
extern const TTCN_OERdescriptor_t OCT7_oer_;
extern const TTCN_Typedescriptor_t OCT7_descr_;
extern UNIVERSAL_CHARSTRING OCT7_default_coding;
extern const TTCN_RAWdescriptor_t OCT8_raw_;
extern const XERdescriptor_t OCT8_xer_;
extern const TTCN_OERdescriptor_t OCT8_oer_;
extern const TTCN_Typedescriptor_t OCT8_descr_;
extern UNIVERSAL_CHARSTRING OCT8_default_coding;
extern const TTCN_RAWdescriptor_t OCT9_raw_;
extern const XERdescriptor_t OCT9_xer_;
extern const TTCN_OERdescriptor_t OCT9_oer_;
extern const TTCN_Typedescriptor_t OCT9_descr_;
extern UNIVERSAL_CHARSTRING OCT9_default_coding;
extern const TTCN_RAWdescriptor_t OCT10_raw_;
extern const XERdescriptor_t OCT10_xer_;
extern const TTCN_OERdescriptor_t OCT10_oer_;
extern const TTCN_Typedescriptor_t OCT10_descr_;
extern UNIVERSAL_CHARSTRING OCT10_default_coding;
extern const TTCN_RAWdescriptor_t OCT11_raw_;
extern const XERdescriptor_t OCT11_xer_;
extern const TTCN_OERdescriptor_t OCT11_oer_;
extern const TTCN_Typedescriptor_t OCT11_descr_;
extern UNIVERSAL_CHARSTRING OCT11_default_coding;
extern const TTCN_RAWdescriptor_t OCT12_raw_;
extern const XERdescriptor_t OCT12_xer_;
extern const TTCN_OERdescriptor_t OCT12_oer_;
extern const TTCN_Typedescriptor_t OCT12_descr_;
extern UNIVERSAL_CHARSTRING OCT12_default_coding;
extern const TTCN_RAWdescriptor_t OCT13_raw_;
extern const XERdescriptor_t OCT13_xer_;
extern const TTCN_OERdescriptor_t OCT13_oer_;
extern const TTCN_Typedescriptor_t OCT13_descr_;
extern UNIVERSAL_CHARSTRING OCT13_default_coding;
extern const TTCN_RAWdescriptor_t OCT14_raw_;
extern const XERdescriptor_t OCT14_xer_;
extern const TTCN_OERdescriptor_t OCT14_oer_;
extern const TTCN_Typedescriptor_t OCT14_descr_;
extern UNIVERSAL_CHARSTRING OCT14_default_coding;
extern const TTCN_RAWdescriptor_t OCT15_raw_;
extern const XERdescriptor_t OCT15_xer_;
extern const TTCN_OERdescriptor_t OCT15_oer_;
extern const TTCN_Typedescriptor_t OCT15_descr_;
extern UNIVERSAL_CHARSTRING OCT15_default_coding;
extern const TTCN_RAWdescriptor_t OCT16_raw_;
extern const XERdescriptor_t OCT16_xer_;
extern const TTCN_OERdescriptor_t OCT16_oer_;
extern const TTCN_Typedescriptor_t OCT16_descr_;
extern UNIVERSAL_CHARSTRING OCT16_default_coding;
extern const TTCN_RAWdescriptor_t OCT17_raw_;
extern const XERdescriptor_t OCT17_xer_;
extern const TTCN_OERdescriptor_t OCT17_oer_;
extern const TTCN_Typedescriptor_t OCT17_descr_;
extern UNIVERSAL_CHARSTRING OCT17_default_coding;
extern const TTCN_RAWdescriptor_t OCT18_raw_;
extern const XERdescriptor_t OCT18_xer_;
extern const TTCN_OERdescriptor_t OCT18_oer_;
extern const TTCN_Typedescriptor_t OCT18_descr_;
extern UNIVERSAL_CHARSTRING OCT18_default_coding;
extern const TTCN_RAWdescriptor_t OCT19_raw_;
extern const XERdescriptor_t OCT19_xer_;
extern const TTCN_OERdescriptor_t OCT19_oer_;
extern const TTCN_Typedescriptor_t OCT19_descr_;
extern UNIVERSAL_CHARSTRING OCT19_default_coding;
extern const TTCN_RAWdescriptor_t OCT20_raw_;
extern const XERdescriptor_t OCT20_xer_;
extern const TTCN_OERdescriptor_t OCT20_oer_;
extern const TTCN_Typedescriptor_t OCT20_descr_;
extern UNIVERSAL_CHARSTRING OCT20_default_coding;
extern const TTCN_RAWdescriptor_t OCT22_raw_;
extern const XERdescriptor_t OCT22_xer_;
extern const TTCN_OERdescriptor_t OCT22_oer_;
extern const TTCN_Typedescriptor_t OCT22_descr_;
extern UNIVERSAL_CHARSTRING OCT22_default_coding;
extern const TTCN_RAWdescriptor_t OCT32_raw_;
extern const XERdescriptor_t OCT32_xer_;
extern const TTCN_OERdescriptor_t OCT32_oer_;
extern const TTCN_Typedescriptor_t OCT32_descr_;
extern UNIVERSAL_CHARSTRING OCT32_default_coding;
extern const TTCN_RAWdescriptor_t OCT34_raw_;
extern const XERdescriptor_t OCT34_xer_;
extern const TTCN_OERdescriptor_t OCT34_oer_;
extern const TTCN_Typedescriptor_t OCT34_descr_;
extern UNIVERSAL_CHARSTRING OCT34_default_coding;
extern const TTCN_RAWdescriptor_t OCT46_raw_;
extern const XERdescriptor_t OCT46_xer_;
extern const TTCN_OERdescriptor_t OCT46_oer_;
extern const TTCN_Typedescriptor_t OCT46_descr_;
extern UNIVERSAL_CHARSTRING OCT46_default_coding;
extern const XERdescriptor_t OCT1__260_xer_;
extern const TTCN_OERdescriptor_t OCT1__260_oer_;
extern const TTCN_Typedescriptor_t OCT1__260_descr_;
extern UNIVERSAL_CHARSTRING OCT1__260_default_coding;
extern const XERdescriptor_t OCT1__8_xer_;
extern const TTCN_OERdescriptor_t OCT1__8_oer_;
extern const TTCN_Typedescriptor_t OCT1__8_descr_;
extern UNIVERSAL_CHARSTRING OCT1__8_default_coding;
extern const XERdescriptor_t OCT1__12_xer_;
extern const TTCN_OERdescriptor_t OCT1__12_oer_;
extern const TTCN_Typedescriptor_t OCT1__12_descr_;
extern UNIVERSAL_CHARSTRING OCT1__12_default_coding;
extern const XERdescriptor_t OCT1__32_xer_;
extern const TTCN_OERdescriptor_t OCT1__32_oer_;
extern const TTCN_Typedescriptor_t OCT1__32_descr_;
extern UNIVERSAL_CHARSTRING OCT1__32_default_coding;
extern const XERdescriptor_t OCT1__50_xer_;
extern const TTCN_OERdescriptor_t OCT1__50_oer_;
extern const TTCN_Typedescriptor_t OCT1__50_descr_;
extern UNIVERSAL_CHARSTRING OCT1__50_default_coding;
extern const XERdescriptor_t OCT3__8_xer_;
extern const TTCN_OERdescriptor_t OCT3__8_oer_;
extern const TTCN_Typedescriptor_t OCT3__8_descr_;
extern UNIVERSAL_CHARSTRING OCT3__8_default_coding;
extern const XERdescriptor_t OCTN_xer_;
extern const TTCN_OERdescriptor_t OCTN_oer_;
extern const TTCN_Typedescriptor_t OCTN_descr_;
extern UNIVERSAL_CHARSTRING OCTN_default_coding;
extern const TTCN_RAWdescriptor_t HEX1_raw_;
extern const XERdescriptor_t HEX1_xer_;
extern const TTCN_Typedescriptor_t HEX1_descr_;
extern UNIVERSAL_CHARSTRING HEX1_default_coding;
extern const XERdescriptor_t HEX0__16_xer_;
extern const TTCN_Typedescriptor_t HEX0__16_descr_;
extern UNIVERSAL_CHARSTRING HEX0__16_default_coding;
extern const XERdescriptor_t HEX5__16_xer_;
extern const TTCN_Typedescriptor_t HEX5__16_descr_;
extern UNIVERSAL_CHARSTRING HEX5__16_default_coding;
extern const XERdescriptor_t HEX1__32_xer_;
extern const TTCN_Typedescriptor_t HEX1__32_descr_;
extern UNIVERSAL_CHARSTRING HEX1__32_default_coding;
extern const TTCN_RAWdescriptor_t INT1_raw_;
extern const XERdescriptor_t INT1_xer_;
extern const TTCN_OERdescriptor_t INT1_oer_;
extern const TTCN_Typedescriptor_t INT1_descr_;
extern UNIVERSAL_CHARSTRING INT1_default_coding;
extern const TTCN_RAWdescriptor_t LIN1_raw_;
extern const XERdescriptor_t LIN1_xer_;
extern const TTCN_Typedescriptor_t LIN1_descr_;
extern UNIVERSAL_CHARSTRING LIN1_default_coding;
extern const TTCN_RAWdescriptor_t LIN2_raw_;
extern const XERdescriptor_t LIN2_xer_;
extern const TTCN_Typedescriptor_t LIN2_descr_;
extern UNIVERSAL_CHARSTRING LIN2_default_coding;
extern const TTCN_RAWdescriptor_t LIN2__BO__LAST_raw_;
extern const XERdescriptor_t LIN2__BO__LAST_xer_;
extern const TTCN_OERdescriptor_t LIN2__BO__LAST_oer_;
extern const TTCN_Typedescriptor_t LIN2__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING LIN2__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t LIN3__BO__LAST_raw_;
extern const XERdescriptor_t LIN3__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t LIN3__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING LIN3__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t LIN4__BO__LAST_raw_;
extern const XERdescriptor_t LIN4__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t LIN4__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING LIN4__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t INT1b_raw_;
extern const XERdescriptor_t INT1b_xer_;
extern const TTCN_Typedescriptor_t INT1b_descr_;
extern UNIVERSAL_CHARSTRING INT1b_default_coding;
extern const TTCN_RAWdescriptor_t INT2b_raw_;
extern const XERdescriptor_t INT2b_xer_;
extern const TTCN_Typedescriptor_t INT2b_descr_;
extern UNIVERSAL_CHARSTRING INT2b_default_coding;
extern const TTCN_RAWdescriptor_t INT3b_raw_;
extern const XERdescriptor_t INT3b_xer_;
extern const TTCN_Typedescriptor_t INT3b_descr_;
extern UNIVERSAL_CHARSTRING INT3b_default_coding;
extern const TTCN_RAWdescriptor_t INT4b_raw_;
extern const XERdescriptor_t INT4b_xer_;
extern const TTCN_Typedescriptor_t INT4b_descr_;
extern UNIVERSAL_CHARSTRING INT4b_default_coding;
extern const TTCN_RAWdescriptor_t INT5b_raw_;
extern const XERdescriptor_t INT5b_xer_;
extern const TTCN_Typedescriptor_t INT5b_descr_;
extern UNIVERSAL_CHARSTRING INT5b_default_coding;
extern const TTCN_RAWdescriptor_t INT6b_raw_;
extern const XERdescriptor_t INT6b_xer_;
extern const TTCN_OERdescriptor_t INT6b_oer_;
extern const TTCN_Typedescriptor_t INT6b_descr_;
extern UNIVERSAL_CHARSTRING INT6b_default_coding;
extern const TTCN_RAWdescriptor_t INT7b_raw_;
extern const XERdescriptor_t INT7b_xer_;
extern const TTCN_Typedescriptor_t INT7b_descr_;
extern UNIVERSAL_CHARSTRING INT7b_default_coding;
extern const TTCN_RAWdescriptor_t INT11b__BO__LAST_raw_;
extern const XERdescriptor_t INT11b__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t INT11b__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING INT11b__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t INT12b__BO__LAST_raw_;
extern const XERdescriptor_t INT12b__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t INT12b__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING INT12b__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t INT13b__BO__LAST_raw_;
extern const XERdescriptor_t INT13b__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t INT13b__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING INT13b__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t INT14b__BO__LAST_raw_;
extern const XERdescriptor_t INT14b__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t INT14b__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING INT14b__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t INT18b__BO__LAST_raw_;
extern const XERdescriptor_t INT18b__BO__LAST_xer_;
extern const TTCN_OERdescriptor_t INT18b__BO__LAST_oer_;
extern const TTCN_Typedescriptor_t INT18b__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING INT18b__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t INT20b__BO__LAST_raw_;
extern const XERdescriptor_t INT20b__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t INT20b__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING INT20b__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t INT31b__BO__LAST_raw_;
extern const XERdescriptor_t INT31b__BO__LAST_xer_;
extern const TTCN_Typedescriptor_t INT31b__BO__LAST_descr_;
extern UNIVERSAL_CHARSTRING INT31b__BO__LAST_default_coding;
extern const TTCN_RAWdescriptor_t Integers_raw_;
extern const TTCN_Typedescriptor_t Integers_descr_;
extern const XERdescriptor_t Integers_0_xer_;
extern const TTCN_Typedescriptor_t Integers_0_descr_;
extern UNIVERSAL_CHARSTRING Integers_0_default_coding;
extern UNIVERSAL_CHARSTRING Integers_default_coding;
extern const TTCN_RAWdescriptor_t Integer__array_raw_;
extern const TTCN_Typedescriptor_t Integer__array_descr_;
extern UNIVERSAL_CHARSTRING Integer__array_0_default_coding;
extern UNIVERSAL_CHARSTRING Integer__array_default_coding;
extern const TTCN_Typedescriptor_t& Dummy__comptype_descr_;
extern const TTCN_Typedescriptor_t& Dummy__CT_descr_;
extern const TTCN_RAWdescriptor_t Protocols_raw_;
extern const TTCN_Typedescriptor_t Protocols_descr_;
extern UNIVERSAL_CHARSTRING Protocols_default_coding;
extern const TTCN_RAWdescriptor_t OCT1List_raw_;
extern const TTCN_Typedescriptor_t OCT1List_descr_;
extern const XERdescriptor_t OCT1List_0_xer_;
extern const TTCN_OERdescriptor_t OCT1List_0_oer_;
extern const TTCN_Typedescriptor_t OCT1List_0_descr_;
extern UNIVERSAL_CHARSTRING OCT1List_0_default_coding;
extern UNIVERSAL_CHARSTRING OCT1List_default_coding;
extern const TTCN_RAWdescriptor_t OCT2List_raw_;
extern const TTCN_Typedescriptor_t OCT2List_descr_;
extern const XERdescriptor_t OCT2List_0_xer_;
extern const TTCN_OERdescriptor_t OCT2List_0_oer_;
extern const TTCN_Typedescriptor_t OCT2List_0_descr_;
extern UNIVERSAL_CHARSTRING OCT2List_0_default_coding;
extern UNIVERSAL_CHARSTRING OCT2List_default_coding;
extern const TTCN_RAWdescriptor_t OCT3List_raw_;
extern const TTCN_Typedescriptor_t OCT3List_descr_;
extern const XERdescriptor_t OCT3List_0_xer_;
extern const TTCN_OERdescriptor_t OCT3List_0_oer_;
extern const TTCN_Typedescriptor_t OCT3List_0_descr_;
extern UNIVERSAL_CHARSTRING OCT3List_0_default_coding;
extern UNIVERSAL_CHARSTRING OCT3List_default_coding;
extern const TTCN_RAWdescriptor_t OCT4List_raw_;
extern const TTCN_Typedescriptor_t OCT4List_descr_;
extern const XERdescriptor_t OCT4List_0_xer_;
extern const TTCN_OERdescriptor_t OCT4List_0_oer_;
extern const TTCN_Typedescriptor_t OCT4List_0_descr_;
extern UNIVERSAL_CHARSTRING OCT4List_0_default_coding;
extern UNIVERSAL_CHARSTRING OCT4List_default_coding;
extern const TTCN_RAWdescriptor_t OCT5List_raw_;
extern const TTCN_Typedescriptor_t OCT5List_descr_;
extern const XERdescriptor_t OCT5List_0_xer_;
extern const TTCN_OERdescriptor_t OCT5List_0_oer_;
extern const TTCN_Typedescriptor_t OCT5List_0_descr_;
extern UNIVERSAL_CHARSTRING OCT5List_0_default_coding;
extern UNIVERSAL_CHARSTRING OCT5List_default_coding;
extern const TTCN_RAWdescriptor_t OCT6List_raw_;
extern const TTCN_Typedescriptor_t OCT6List_descr_;
extern const XERdescriptor_t OCT6List_0_xer_;
extern const TTCN_OERdescriptor_t OCT6List_0_oer_;
extern const TTCN_Typedescriptor_t OCT6List_0_descr_;
extern UNIVERSAL_CHARSTRING OCT6List_0_default_coding;
extern UNIVERSAL_CHARSTRING OCT6List_default_coding;
extern const TTCN_RAWdescriptor_t OCT7List_raw_;
extern const TTCN_Typedescriptor_t OCT7List_descr_;
extern const XERdescriptor_t OCT7List_0_xer_;
extern const TTCN_OERdescriptor_t OCT7List_0_oer_;
extern const TTCN_Typedescriptor_t OCT7List_0_descr_;
extern UNIVERSAL_CHARSTRING OCT7List_0_default_coding;
extern UNIVERSAL_CHARSTRING OCT7List_default_coding;
extern const TTCN_Typedescriptor_t ListOfDummy__comptype_descr_;
extern const TTCN_Typedescriptor_t ListOfDummy__CT_descr_;
extern const TTCN_RAWdescriptor_t ProtocolList_raw_;
extern const TTCN_Typedescriptor_t ProtocolList_descr_;
extern UNIVERSAL_CHARSTRING ProtocolList_0_default_coding;
extern UNIVERSAL_CHARSTRING ProtocolList_default_coding;
extern TTCN_Module module_object;

} /* end of namespace */

#endif
